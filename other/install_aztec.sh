#!/bin/bash

#
# for Aztec Node Monitoring Agent by Pittpv
# https://github.com/pittpv/aztec-monitoring-script
#

set -e

# === Language settings ===
LANG="en"
declare -A TRANSLATIONS

# Translation function
t() {
  local key=$1
  echo "${TRANSLATIONS["${LANG},${key}"]:-$key}"
}

# Initialize languages
init_languages() {
  # Check if language is passed as argument
  if [ -n "$1" ]; then
    case $1 in
      "en") LANG="en" ;;
      "ru") LANG="ru" ;;
      "tr") LANG="tr" ;;
    esac
  fi

  # English translations
  TRANSLATIONS["en,installing_deps"]="üîß Installing system dependencies..."
  TRANSLATIONS["en,deps_installed"]="‚úÖ Dependencies installed"
  TRANSLATIONS["en,checking_docker"]="üîç Checking Docker and docker compose..."
  TRANSLATIONS["en,docker_not_found"]="‚ùå Docker not installed"
  TRANSLATIONS["en,docker_compose_not_found"]="‚ùå docker compose (v2+) not found"
  TRANSLATIONS["en,install_docker_prompt"]="Install Docker? (y/n) "
  TRANSLATIONS["en,install_compose_prompt"]="Install Docker Compose? (y/n) "
  TRANSLATIONS["en,docker_required"]="‚ùå Docker is required for the script. Exiting."
  TRANSLATIONS["en,compose_required"]="‚ùå Docker Compose is required for the script. Exiting."
  TRANSLATIONS["en,installing_docker"]="Installing Docker..."
  TRANSLATIONS["en,installing_compose"]="Installing Docker Compose..."
  TRANSLATIONS["en,docker_installed"]="‚úÖ Docker successfully installed"
  TRANSLATIONS["en,compose_installed"]="‚úÖ Docker Compose successfully installed"
  TRANSLATIONS["en,docker_found"]="‚úÖ Docker and docker compose found"
  TRANSLATIONS["en,installing_aztec"]="‚¨áÔ∏è Installing Aztec node..."
  TRANSLATIONS["en,aztec_not_installed"]="‚ùå Aztec node not installed. Check installation."
  TRANSLATIONS["en,aztec_installed"]="‚úÖ Aztec node installed"
  TRANSLATIONS["en,running_aztec_up"]="üöÄ Running aztec-up latest..."
  TRANSLATIONS["en,opening_ports"]="üåê Opening ports 40400 and 8080..."
  TRANSLATIONS["en,ports_opened"]="‚úÖ Ports opened"
  TRANSLATIONS["en,creating_folder"]="üìÅ Creating ~/aztec folder..."
  TRANSLATIONS["en,creating_env"]="üìù Creating .env file..."
  TRANSLATIONS["en,env_created"]="‚úÖ .env file created"
  TRANSLATIONS["en,creating_compose"]="üõ†Ô∏è Creating docker-compose.yml with Watchtower"
  TRANSLATIONS["en,compose_created"]="‚úÖ docker-compose.yml created"
  TRANSLATIONS["en,starting_node"]="üöÄ Starting Aztec node..."
  TRANSLATIONS["en,showing_logs"]="üìÑ Showing last 200 lines of logs..."
  TRANSLATIONS["en,logs_starting"]="Logs will start in 5 seconds... Press Ctrl+C to exit logs"
  TRANSLATIONS["en,checking_ports"]="Checking ports..."
  TRANSLATIONS["en,port_error"]="Error: Port $port is busy. The program cannot continue."
  TRANSLATIONS["en,ports_free"]="All ports are free! Installation will start now...\n"
  TRANSLATIONS["en,ports_busy"]="The following ports are busy:"
  TRANSLATIONS["en,change_ports_prompt"]="Do you want to change ports? (y/n) "
  TRANSLATIONS["en,enter_new_ports"]="Enter new port numbers:"
  TRANSLATIONS["en,enter_http_port"]="Enter HTTP port"
  TRANSLATIONS["en,enter_p2p_port"]="Enter P2P port"
  TRANSLATIONS["en,installation_aborted"]="Installation aborted by user"
  TRANSLATIONS["en,checking_ports_desc"]="Making sure ports are not used by other processes..."
  TRANSLATIONS["en,scanning_ports"]="Scanning ports"
  TRANSLATIONS["en,busy"]="busy"
  TRANSLATIONS["en,free"]="free"
  TRANSLATIONS["en,ports_free_success"]="All ports are available"
  TRANSLATIONS["en,ports_busy_error"]="Some ports are already in use"
  TRANSLATIONS["en,enter_new_ports_prompt"]="Please enter new port numbers"
  TRANSLATIONS["en,ports_updated"]="Port numbers have been updated"
  TRANSLATIONS["en,installing_ss"]="Installing iproute2 (contains ss utility)..."
  TRANSLATIONS["en,ss_installed"]="iproute2 installed successfully"
  TRANSLATIONS["en,delete_node"]="üóëÔ∏è Deleting Aztec Node..."
  TRANSLATIONS["en,delete_confirm"]="Are you sure you want to delete the Aztec node? This will stop containers and remove all data. (y/n) "
  TRANSLATIONS["en,node_deleted"]="‚úÖ Aztec node successfully deleted"
  TRANSLATIONS["en,delete_canceled"]="‚úñ Node deletion canceled"
  TRANSLATIONS["en,warn_orig_install"]="‚ö†Ô∏è Type 'n' when prompted with the question:"
  TRANSLATIONS["en,warn_orig_install_2"]="Add it to /root/.bash_profile to make the aztec binaries accessible?"

  # Russian translations
  TRANSLATIONS["ru,installing_deps"]="üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
  TRANSLATIONS["ru,deps_installed"]="‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
  TRANSLATIONS["ru,checking_docker"]="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∏ docker compose..."
  TRANSLATIONS["ru,docker_not_found"]="‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  TRANSLATIONS["ru,docker_compose_not_found"]="‚ùå docker compose (v2+) –Ω–µ –Ω–∞–π–¥–µ–Ω"
  TRANSLATIONS["ru,install_docker_prompt"]="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker? (y/n) "
  TRANSLATIONS["ru,install_compose_prompt"]="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose? (y/n) "
  TRANSLATIONS["ru,docker_required"]="‚ùå Docker –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞. –í—ã—Ö–æ–¥."
  TRANSLATIONS["ru,compose_required"]="‚ùå Docker Compose –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞. –í—ã—Ö–æ–¥."
  TRANSLATIONS["ru,installing_docker"]="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
  TRANSLATIONS["ru,installing_compose"]="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
  TRANSLATIONS["ru,docker_installed"]="‚úÖ Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  TRANSLATIONS["ru,compose_installed"]="‚úÖ Docker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  TRANSLATIONS["ru,docker_found"]="‚úÖ Docker –∏ docker compose –Ω–∞–π–¥–µ–Ω—ã"
  TRANSLATIONS["ru,installing_aztec"]="‚¨áÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,aztec_not_installed"]="‚ùå Aztec –Ω–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
  TRANSLATIONS["ru,aztec_installed"]="‚úÖ Aztec –Ω–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
  TRANSLATIONS["ru,running_aztec_up"]="üöÄ –ó–∞–ø—É—Å–∫ aztec-up latest..."
  TRANSLATIONS["ru,opening_ports"]="üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ 40400 –∏ 8080..."
  TRANSLATIONS["ru,ports_opened"]="‚úÖ –ü–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã"
  TRANSLATIONS["ru,creating_folder"]="üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ ~/aztec..."
  TRANSLATIONS["ru,creating_env"]="üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
  TRANSLATIONS["ru,env_created"]="‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
  TRANSLATIONS["ru,creating_compose"]="üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml c Watchtower"
  TRANSLATIONS["ru,compose_created"]="‚úÖ docker-compose.yml —Å–æ–∑–¥–∞–Ω"
  TRANSLATIONS["ru,starting_node"]="üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,showing_logs"]="üìÑ –ü–æ–∫–∞–∑—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤..."
  TRANSLATIONS["ru,logs_starting"]="–õ–æ–≥–∏ –∑–∞–ø—É—Å—Ç—è—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥... –ù–∞–∂–º–∏—Ç–µ Ctrl+C —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –ª–æ–≥–æ–≤"
  TRANSLATIONS["ru,checking_ports"]="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
  TRANSLATIONS["ru,port_error"]="–û—à–∏–±–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è."
  TRANSLATIONS["ru,ports_free"]="–í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã! –°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...\n"
  TRANSLATIONS["ru,ports_busy"]="–°–ª–µ–¥—É—é—â–∏–µ –ø–æ—Ä—Ç—ã –∑–∞–Ω—è—Ç—ã:"
  TRANSLATIONS["ru,change_ports_prompt"]="–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç—ã? (y/n) "
  TRANSLATIONS["ru,enter_new_ports"]="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–æ–≤:"
  TRANSLATIONS["ru,enter_http_port"]="–í–≤–µ–¥–∏—Ç–µ HTTP –ø–æ—Ä—Ç"
  TRANSLATIONS["ru,enter_p2p_port"]="–í–≤–µ–¥–∏—Ç–µ P2P –ø–æ—Ä—Ç"
  TRANSLATIONS["ru,installation_aborted"]="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
  TRANSLATIONS["ru,checking_ports_desc"]="–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ—Ä—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏..."
  TRANSLATIONS["ru,scanning_ports"]="–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤"
  TRANSLATIONS["ru,busy"]="–∑–∞–Ω—è—Ç"
  TRANSLATIONS["ru,free"]="—Å–≤–æ–±–æ–¥–µ–Ω"
  TRANSLATIONS["ru,ports_free_success"]="–í—Å–µ –ø–æ—Ä—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã"
  TRANSLATIONS["ru,ports_busy_error"]="–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ä—Ç—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è"
  TRANSLATIONS["ru,enter_new_ports_prompt"]="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–æ–≤"
  TRANSLATIONS["ru,ports_updated"]="–ù–æ–º–µ—Ä–∞ –ø–æ—Ä—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
  TRANSLATIONS["ru,installing_ss"]="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ iproute2 (—Å–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—É ss)..."
  TRANSLATIONS["ru,ss_installed"]="iproute2 —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  TRANSLATIONS["ru,delete_node"]="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,delete_confirm"]="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É Aztec? –≠—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ. (y/n) "
  TRANSLATIONS["ru,node_deleted"]="‚úÖ –ù–æ–¥–∞ Aztec —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞"
  TRANSLATIONS["ru,delete_canceled"]="‚úñ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–æ"
  TRANSLATIONS["ru,warn_orig_install"]="‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ 'n' –∫–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–ø—Ä–æ—Å:"
  TRANSLATIONS["ru,warn_orig_install_2"]="Add it to /root/.bash_profile to make the aztec binaries accessible?"

  # Turkish translations
  TRANSLATIONS["tr,installing_deps"]="üîß Sistem baƒüƒ±mlƒ±lƒ±klarƒ± y√ºkleniyor..."
  TRANSLATIONS["tr,deps_installed"]="‚úÖ Baƒüƒ±mlƒ±lƒ±klar y√ºklendi"
  TRANSLATIONS["tr,checking_docker"]="üîç Docker ve docker compose kontrol ediliyor..."
  TRANSLATIONS["tr,docker_not_found"]="‚ùå Docker y√ºkl√º deƒüil"
  TRANSLATIONS["tr,docker_compose_not_found"]="‚ùå docker compose (v2+) bulunamadƒ±"
  TRANSLATIONS["tr,install_docker_prompt"]="Docker y√ºklensin mi? (y/n) "
  TRANSLATIONS["tr,install_compose_prompt"]="Docker Compose y√ºklensin mi? (y/n) "
  TRANSLATIONS["tr,docker_required"]="‚ùå Scriptin √ßalƒ±≈ümasƒ± i√ßin Docker gereklidir. √áƒ±kƒ±lƒ±yor."
  TRANSLATIONS["tr,compose_required"]="‚ùå Scriptin √ßalƒ±≈ümasƒ± i√ßin Docker Compose gereklidir. √áƒ±kƒ±lƒ±yor."
  TRANSLATIONS["tr,installing_docker"]="Docker y√ºkleniyor..."
  TRANSLATIONS["tr,installing_compose"]="Docker Compose y√ºkleniyor..."
  TRANSLATIONS["tr,docker_installed"]="‚úÖ Docker ba≈üarƒ±yla y√ºklendi"
  TRANSLATIONS["tr,compose_installed"]="‚úÖ Docker Compose ba≈üarƒ±yla y√ºklendi"
  TRANSLATIONS["tr,docker_found"]="‚úÖ Docker ve docker compose bulundu"
  TRANSLATIONS["tr,installing_aztec"]="‚¨áÔ∏è Aztec y√ºkleniyor..."
  TRANSLATIONS["tr,aztec_not_installed"]="‚ùå Aztec y√ºkl√º deƒüil. Kurulumu kontrol edin."
  TRANSLATIONS["tr,aztec_installed"]="‚úÖ Aztec y√ºklendi"
  TRANSLATIONS["tr,running_aztec_up"]="üöÄ aztec-up latest √ßalƒ±≈ütƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,opening_ports"]="üåê 40400 ve 8080 portlarƒ± a√ßƒ±lƒ±yor..."
  TRANSLATIONS["tr,ports_opened"]="‚úÖ Portlar a√ßƒ±ldƒ±"
  TRANSLATIONS["tr,creating_folder"]="üìÅ ~/aztec klas√∂r√º olu≈üturuluyor..."
  TRANSLATIONS["tr,creating_env"]="üìù .env dosyasƒ± olu≈üturuluyor..."
  TRANSLATIONS["tr,env_created"]="‚úÖ .env dosyasƒ± olu≈üturuldu"
  TRANSLATIONS["tr,creating_compose"]="üõ†Ô∏è Watchtower ile docker-compose.yml olu≈üturuluyor"
  TRANSLATIONS["tr,compose_created"]="‚úÖ docker-compose.yml olu≈üturuldu"
  TRANSLATIONS["tr,starting_node"]="üöÄ Aztec node ba≈ülatƒ±lƒ±yor..."
  TRANSLATIONS["tr,showing_logs"]="üìÑ Son 200 log satƒ±rƒ± g√∂steriliyor..."
  TRANSLATIONS["tr,logs_starting"]="Loglar 5 saniye i√ßinde ba≈ülayacak... Loglardan √ßƒ±kmak i√ßin Ctrl+C'ye basƒ±n"
  TRANSLATIONS["tr,checking_ports"]="Portlar kontrol ediliyor..."
  TRANSLATIONS["tr,port_error"]="Hata: $port portu dolu. Program devam edemez."
  TRANSLATIONS["tr,ports_free"]="T√ºm portlar bo≈ü! Kurulum ≈üimdi ba≈ülayacak...\n"
  TRANSLATIONS["tr,ports_busy"]="≈ûu portlar dolu:"
  TRANSLATIONS["tr,change_ports_prompt"]="Portlarƒ± deƒüi≈ütirmek ister misiniz? (y/n) "
  TRANSLATIONS["tr,enter_new_ports"]="Yeni port numaralarƒ±nƒ± girin:"
  TRANSLATIONS["tr,enter_http_port"]="HTTP portunu girin"
  TRANSLATIONS["tr,enter_p2p_port"]="P2P portunu girin"
  TRANSLATIONS["tr,installation_aborted"]="Kurulum kullanƒ±cƒ± tarafƒ±ndan iptal edildi"
  TRANSLATIONS["tr,checking_ports_desc"]="Ba≈üka s√ºre√ßler tarafƒ±ndan kullanƒ±lmadƒ±ƒüƒ±ndan emin olmak i√ßin portlar kontrol ediliyor..."
  TRANSLATIONS["tr,scanning_ports"]="Portlar taranƒ±yor"
  TRANSLATIONS["tr,busy"]="me≈ügul"
  TRANSLATIONS["tr,free"]="bo≈üta"
  TRANSLATIONS["tr,ports_free_success"]="T√ºm portlar kullanƒ±ma hazƒ±r"
  TRANSLATIONS["tr,ports_busy_error"]="Bazƒ± portlar zaten kullanƒ±mda"
  TRANSLATIONS["tr,enter_new_ports_prompt"]="Yeni port numaralarƒ±nƒ± girin"
  TRANSLATIONS["tr,ports_updated"]="Port numaralarƒ± g√ºncellendi"
  TRANSLATIONS["tr,installing_ss"]="iproute2 y√ºkleniyor (ss aracƒ± i√ßerir)..."
  TRANSLATIONS["tr,ss_installed"]="iproute2 ba≈üarƒ±yla y√ºklendi"
  TRANSLATIONS["tr,delete_node"]="üóëÔ∏è Aztec Node siliniyor..."
  TRANSLATIONS["tr,delete_confirm"]="Aztec node'u silmek istediƒüinize emin misiniz? Bu i≈ülem konteynerleri durduracak ve t√ºm verileri silecektir. (y/n) "
  TRANSLATIONS["tr,node_deleted"]="‚úÖ Aztec node ba≈üarƒ±yla silindi"
  TRANSLATIONS["tr,delete_canceled"]="‚úñ Node silme i≈ülemi iptal edildi"
  TRANSLATIONS["tr,warn_orig_install"]="‚ö†Ô∏è ≈ûu soru √ßƒ±ktƒ±ƒüƒ±nda 'n' yazƒ±n:"
  TRANSLATIONS["tr,warn_orig_install_2"]="Add it to /root/.bash_profile to make the aztec binaries accessible?"
}

# Initialize language (default to en if no argument)
init_languages "$1"

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

delete_aztec_node() {
    echo -e "\n${RED}=== $(t "delete_node") ===${NC}"
    read -p "$(t "delete_confirm")" -n 1 -r
    echo

    # –û—á–∏—Å—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
    while [[ -n $REPLY && ! $REPLY =~ ^[YyNn]$ ]]; do
        read -p "Please enter Y or N: " -n 1 -r
        echo
    done

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Stopping containers...${NC}"
        docker compose -f "$HOME/aztec/docker-compose.yml" down || true

        echo -e "${YELLOW}Removing data...${NC}"
        sudo rm -rf "$HOME/.aztec" "$HOME/aztec"

        echo -e "${GREEN}$(t "node_deleted")${NC}"
        return 0
    else
        echo -e "${YELLOW}$(t "delete_canceled")${NC}"
        return 1
    fi
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Ä—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
http_port=8080
p2p_port=40400

check_and_set_ports() {
    local new_http_port
    local new_p2p_port

    echo -e "\n${CYAN}=== $(t "checking_ports") ===${NC}"
    echo -e "${GRAY}$(t "checking_ports_desc")${NC}\n"

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ iproute2 (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω) - —Å–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—É ss
    if ! command -v ss &> /dev/null; then
        echo -e "${YELLOW}$(t "installing_ss")...${NC}"
        sudo apt update -q > /dev/null 2>&1
        sudo apt install -y iproute2 > /dev/null 2>&1
        echo -e "${GREEN}$(t "ss_installed") ‚úî${NC}\n"
    fi

    while true; do
        ports=("$http_port" "$p2p_port")
        ports_busy=()

        echo -e "${CYAN}$(t "scanning_ports")...${NC}"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Ä—Ç–∞ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º ss –≤–º–µ—Å—Ç–æ lsof)
        for port in "${ports[@]}"; do
            echo -n -e "  ${YELLOW}Port $port:${NC} "
            if sudo ss -tuln | grep -q ":${port}\b"; then
                echo -e "${RED}$(t "busy") ‚úñ${NC}"
                ports_busy+=("$port")
            else
                echo -e "${GREEN}$(t "free") ‚úî${NC}"
            fi
            sleep 0.1  # –£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —Ç–∞–∫ –∫–∞–∫ ss —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ
        done

        # –í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã ‚Üí –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
        if [ ${#ports_busy[@]} -eq 0 ]; then
            echo -e "\n${GREEN}‚úì $(t "ports_free_success")${NC}"
            echo -e "  HTTP: ${GREEN}$http_port${NC}, P2P: ${GREEN}$p2p_port${NC}\n"
            break
        else
            # –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã
            echo -e "\n${RED}‚ö† $(t "ports_busy_error")${NC}"
            echo -e "  ${RED}${ports_busy[*]}${NC}\n"

            # –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç—ã
            read -p "$(t "change_ports_prompt") " -n 1 -r
            echo

            if [[ $REPLY =~ ^[Yy]$ || -z "$REPLY" ]]; then
                echo -e "\n${YELLOW}$(t "enter_new_ports_prompt")${NC}"

                # –ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ HTTP-–ø–æ—Ä—Ç–∞
                read -p "  $(t "enter_http_port") [${GRAY}by default: $http_port${NC}]: " new_http_port
                http_port=${new_http_port:-$http_port}

                # –ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ P2P-–ø–æ—Ä—Ç–∞
                read -p "  $(t "enter_p2p_port") [${GRAY}by default: $p2p_port${NC}]: " new_p2p_port
                p2p_port=${new_p2p_port:-$p2p_port}

                echo -e "\n${CYAN}$(t "ports_updated")${NC}"
                echo -e "  HTTP: ${YELLOW}$http_port${NC}, P2P: ${YELLOW}$p2p_port${NC}\n"
            else
                # –û—Ç–º–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                #echo -e "\n${RED}‚úñ $(t "installation_aborted")${NC}\n"
                exit 2
            fi
        fi
    done
}

# –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Ä—Ç–æ–≤
check_and_set_ports

echo -e "\n${GREEN}$(t "installing_deps")${NC}"
sudo apt update
sudo apt install curl iptables build-essential git wget lz4 jq make gcc nano automake autoconf tmux htop nvme-cli libgbm1 pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

echo -e "\n${GREEN}$(t "deps_installed")${NC}"

echo -e "\n${GREEN}$(t "checking_docker")${NC}"

install_docker() {
    echo -e "\n${YELLOW}$(t "installing_docker")${NC}"
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    echo -e "\n${GREEN}$(t "docker_installed")${NC}"
}

install_docker_compose() {
    echo -e "\n${YELLOW}$(t "installing_compose")${NC}"
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    echo -e "\n${GREEN}$(t "compose_installed")${NC}"
}

if ! command -v docker &>/dev/null; then
    echo -e "\n${RED}$(t "docker_not_found")${NC}"
    read -p "\n$(t "install_docker_prompt")" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_docker
    else
        echo -e "\n${RED}$(t "docker_required")${NC}"
        exit 1
    fi
fi

if ! docker compose version &>/dev/null; then
    echo -e "\n${RED}$(t "docker_compose_not_found")${NC}"
    read -p "\n$(t "install_compose_prompt")" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_docker_compose
    else
        echo -e "\n${RED}$(t "compose_required")${NC}"
        exit 1
    fi
fi

echo -e "\n${GREEN}$(t "docker_found")${NC}"

echo -e "\n${GREEN}$(t "installing_aztec")${NC}"
echo -e "${YELLOW}$(t "warn_orig_install") ${NC}$(t "warn_orig_install_2")${NC}"
sleep 5
curl -s https://install.aztec.network -o install-aztec.sh
chmod +x install-aztec.sh
bash install-aztec.sh

echo 'export PATH="$HOME/.aztec/bin:$PATH"' >> ~/.bash_profile
source ~/.bash_profile

if ! command -v aztec &>/dev/null; then
    echo -e "\n${RED}$(t "aztec_not_installed")${NC}"
    exit 1
fi

echo -e "\n${GREEN}$(t "aztec_installed")${NC}"

echo -e "\n${GREEN}$(t "running_aztec_up")${NC}"
aztec-up latest

# –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ firewall
echo -e "\n${GREEN}$(t "opening_ports")${NC}"
sudo ufw allow "$p2p_port"
sudo ufw allow "$http_port"
echo -e "\n${GREEN}$(t "ports_opened")${NC}"

echo -e "\n${GREEN}$(t "creating_folder")${NC}"
mkdir -p "$HOME/aztec"
cd "$HOME/aztec"

echo -e "\n${GREEN}$(t "creating_env")${NC}"
read -p "ETHEREUM_RPC_URL: " ETHEREUM_RPC_URL
read -p "CONSENSUS_BEACON_URL: " CONSENSUS_BEACON_URL
read -p "VALIDATOR_PRIVATE_KEY: " VALIDATOR_PRIVATE_KEY
read -p "COINBASE: " COINBASE
read -p "P2P_IP: " P2P_IP

cat > .env <<EOF
ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL}
CONSENSUS_BEACON_URL=${CONSENSUS_BEACON_URL}
VALIDATOR_PRIVATE_KEY=${VALIDATOR_PRIVATE_KEY}
COINBASE=${COINBASE}
P2P_IP=${P2P_IP}
EOF

echo -e "\n${GREEN}$(t "env_created")${NC}"

echo -e "\n${GREEN}$(t "creating_compose")${NC}"
cat > docker-compose.yml <<EOF
services:
  aztec-node:
    container_name: aztec-sequencer
    network_mode: host
    image: aztecprotocol/aztec:latest
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.auto-update=config"
    environment:
      ETHEREUM_HOSTS: \${ETHEREUM_RPC_URL}
      L1_CONSENSUS_HOST_URLS: \${CONSENSUS_BEACON_URL}
      DATA_DIRECTORY: /data
      VALIDATOR_PRIVATE_KEY: \${VALIDATOR_PRIVATE_KEY}
      COINBASE: \${COINBASE}
      P2P_IP: \${P2P_IP}
      LOG_LEVEL: debug
    entrypoint: >
      sh -c 'node --no-warnings /usr/src/yarn-project/aztec/dest/bin/index.js start --network alpha-testnet --node --archiver --sequencer'
    ports:
      - ${p2p_port}:${p2p_port}/tcp
      - ${p2p_port}:${p2p_port}/udp
      - ${http_port}:${http_port}
    volumes:
      - /root/.aztec/alpha-testnet/data/:/data

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --cleanup --label-enable
    restart: unless-stopped
EOF

echo -e "\n${GREEN}$(t "compose_created")${NC}"

echo -e "\n${GREEN}$(t "starting_node")${NC}"
docker compose up -d

echo -e "\n${YELLOW}$(t "showing_logs")${NC}"
echo -e "${YELLOW}$(t "logs_starting")${NC}"
sleep 5
echo -e ""
docker compose logs -fn 200