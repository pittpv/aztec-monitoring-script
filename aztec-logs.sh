#!/bin/bash

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
VIOLET='\033[0;35m'
NC='\033[0m' # No Color

SCRIPT_VERSION="2.0.0"

function show_logo() {
    echo -e " "
    echo -e " "
    echo -e "${NC}$(t "welcome")${NC}"
    curl -s https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/logo.sh | bash
}

# === Language settings ===
LANG=""
declare -A TRANSLATIONS

# Translation function
t() {
  local key=$1
  echo "${TRANSLATIONS[$LANG,$key]}"
}

# Initialize languages
init_languages() {
  echo -e "\n${BLUE}Select language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:${NC}"
  echo -e "1. English"
  echo -e "2. –†—É—Å—Å–∫–∏–π"
  echo -e "3. T√ºrk√ße"
  read -p "> " lang_choice

  case $lang_choice in
    1) LANG="en" ;;
    2) LANG="ru" ;;
    3) LANG="tr" ;;
    *) LANG="en" ;;
  esac

  # English translations
  TRANSLATIONS["en,welcome"]="Welcome to the Aztec node monitoring script"
  TRANSLATIONS["en,title"]="========= Main Menu ========="
  TRANSLATIONS["en,option1"]="1. Check container and node synchronization"
  TRANSLATIONS["en,option2"]="2. Install node monitoring agent with notifications"
  TRANSLATIONS["en,option3"]="3. Remove node monitoring agent and files"
  TRANSLATIONS["en,option4"]="4. Find rollupAddress in logs"
  TRANSLATIONS["en,option5"]="5. Find PeerID in logs"
  TRANSLATIONS["en,option6"]="6. Find governanceProposerPayload in logs"
  TRANSLATIONS["en,option7"]="7. Check Proven L2 Block and Sync Proof"
  TRANSLATIONS["en,option8"]="8. Change RPC URL"
  TRANSLATIONS["en,option9"]="9. Search for validator and check status"
  TRANSLATIONS["en,option10"]="10. View Aztec logs"
  TRANSLATIONS["en,option11"]="11. Install Aztec Node with Watchtower"
  TRANSLATIONS["en,option12"]="12. Delete Aztec node"
  TRANSLATIONS["en,option13"]="13. Stop Aztec node containers"
  TRANSLATIONS["en,option14"]="14. Start Aztec node containers"
  TRANSLATIONS["en,option15"]="15. Update Aztec node"
  TRANSLATIONS["en,option16"]="16. Downgrade Aztec node"
  TRANSLATIONS["en,option17"]="17. Check Aztec version"
  TRANSLATIONS["en,option0"]="0. Exit"
  TRANSLATIONS["en,rpc_change_prompt"]="Enter new RPC URL:"
  TRANSLATIONS["en,rpc_change_success"]="‚úÖ RPC URL successfully updated"
  TRANSLATIONS["en,choose_option"]="Select option:"
  TRANSLATIONS["en,checking_deps"]="üîç Checking required components:"
  TRANSLATIONS["en,missing_tools"]="Required components are missing:"
  TRANSLATIONS["en,install_prompt"]="Do you want to install them now? (Y/n):"
  TRANSLATIONS["en,missing_required"]="‚ö†Ô∏è Script cannot work without required components. Exiting."
  TRANSLATIONS["en,rpc_prompt"]="Enter RPC URL:"
  TRANSLATIONS["en,env_created"]="‚úÖ Created .env file with RPC URL"
  TRANSLATIONS["en,env_exists"]="‚úÖ Using existing .env file with RPC URL:"
  TRANSLATIONS["en,search_container"]="üîç Searching for 'aztec' container..."
  TRANSLATIONS["en,container_not_found"]="‚ùå Container 'aztec' not found."
  TRANSLATIONS["en,container_found"]="‚úÖ Container found:"
  TRANSLATIONS["en,get_block"]="üîó Getting current block from contract..."
  TRANSLATIONS["en,block_error"]="‚ùå Error: Failed to get block number. Check RPC or contract."
  TRANSLATIONS["en,current_block"]="üì¶ Current block number:"
  TRANSLATIONS["en,node_ok"]="‚úÖ Node is working and processing current block"
  TRANSLATIONS["en,node_behind"]="‚ö†Ô∏è Current block not found in logs. Node might be behind."
  TRANSLATIONS["en,search_rollup"]="üîç Searching for rollupAddress in 'aztec' container logs..."
  TRANSLATIONS["en,rollup_found"]="‚úÖ Current rollupAddress:"
  TRANSLATIONS["en,rollup_not_found"]="‚ùå rollupAddress not found in logs."
  TRANSLATIONS["en,search_peer"]="üîç Searching for PeerID in 'aztec' container logs..."
  TRANSLATIONS["en,peer_not_found"]="‚ùå No PeerID found in logs."
  TRANSLATIONS["en,search_gov"]="üîç Searching for governanceProposerPayload in 'aztec' container logs..."
  TRANSLATIONS["en,gov_found"]="Found governanceProposerPayload values:"
  TRANSLATIONS["en,gov_not_found"]="‚ùå No governanceProposerPayload found."
  TRANSLATIONS["en,gov_changed"]="üõë GovernanceProposerPayload change detected!"
  TRANSLATIONS["en,gov_was"]="‚ö†Ô∏è Was:"
  TRANSLATIONS["en,gov_now"]="Now:"
  TRANSLATIONS["en,gov_no_changes"]="‚úÖ No changes detected."
  TRANSLATIONS["en,token_prompt"]="Enter Telegram Bot Token:"
  TRANSLATIONS["en,chatid_prompt"]="Enter Telegram Chat ID:"
  TRANSLATIONS["en,agent_added"]="‚úÖ Agent added to cron and will run every minute."
  TRANSLATIONS["en,agent_exists"]="‚ÑπÔ∏è Agent already exists in cron."
  TRANSLATIONS["en,removing_agent"]="üóë Removing agent and cron task..."
  TRANSLATIONS["en,agent_removed"]="‚úÖ Agent and cron task removed."
  TRANSLATIONS["en,goodbye"]="üëã Goodbye."
  TRANSLATIONS["en,invalid_choice"]="‚ùå Invalid choice. Try again."
  TRANSLATIONS["en,searching"]="Searching..."
  TRANSLATIONS["en,get_proven_block"]="üîç Getting proven L2 block number..."
  TRANSLATIONS["en,proven_block_found"]="‚úÖ Proven L2 Block Number:"
  TRANSLATIONS["en,proven_block_error"]="‚ùå Failed to retrieve the proven L2 block number."
  TRANSLATIONS["en,get_sync_proof"]="üîç Fetching Sync Proof..."
  TRANSLATIONS["en,sync_proof_found"]="‚úÖ Sync Proof:"
  TRANSLATIONS["en,sync_proof_error"]="‚ùå Failed to retrieve sync proof."
  TRANSLATIONS["en,token_check"]="üîç Checking Telegram token and ChatID..."
  TRANSLATIONS["en,token_valid"]="‚úÖ Telegram token is valid"
  TRANSLATIONS["en,token_invalid"]="‚ùå Invalid Telegram token"
  TRANSLATIONS["en,chatid_valid"]="‚úÖ ChatID is valid and bot has access"
  TRANSLATIONS["en,chatid_invalid"]="‚ùå Invalid ChatID or bot has no access"
  TRANSLATIONS["en,agent_created"]="‚úÖ Agent successfully created and configured!"
  TRANSLATIONS["en,running_validator_script"]="Running Check Validator script from GitHub..."
  TRANSLATIONS["en,failed_run_validator"]="Failed to run Check Validator script."
  TRANSLATIONS["en,enter_aztec_port_prompt"]="Enter Aztec node port number"
  TRANSLATIONS["en,port_saved_successfully"]="‚úÖ Port saved successfully"
  TRANSLATIONS["en,checking_port"]="Checking port"
  TRANSLATIONS["en,port_not_available"]="Aztec port not available on"
  TRANSLATIONS["en,current_aztec_port"]="Current Aztec node port:"
  TRANSLATIONS["en,log_block_not_found"]="‚ùå No line with 'Downloaded L2 block' found in logs."
  TRANSLATIONS["en,log_block_extract_failed"]="‚ùå Failed to extract block number from the line:"
  TRANSLATIONS["en,log_block_number"]="üìÑ Latest block from logs:"
  TRANSLATIONS["en,log_behind_details"]="‚ö†Ô∏è Logs are behind. Latest block in logs: %s, from contract: %s"
  TRANSLATIONS["en,log_line_example"]="üîé Example log line:"
  TRANSLATIONS["en,press_ctrlc"]="Press Ctrl+C to exit and return to the menu"
  TRANSLATIONS["en,logs_starting"]="Logs will start in 5 seconds..."
  TRANSLATIONS["en,return_main_menu"]="Returning to the main menu..."
  TRANSLATIONS["en,current_script_version"]="üìå Current script version:"
  TRANSLATIONS["en,new_version_avialable"]="üöÄ New version available:"
  TRANSLATIONS["en,new_version_update"]="Please update your script and cron agent"
  TRANSLATIONS["en,version_up_to_date"]="‚úÖ You are using the latest version"
  TRANSLATIONS["en,agent_log_cleaned"]="‚úÖ Log file cleaned."
  TRANSLATIONS["en,agent_container_not_found"]="‚ùå Aztec Container Not Found"
  TRANSLATIONS["en,agent_block_fetch_error"]="‚ùå Block Fetch Error"
  TRANSLATIONS["en,agent_no_block_in_logs"]="‚ùå No 'Downloaded L2 block' found"
  TRANSLATIONS["en,agent_failed_extract_block"]="‚ùå Failed to extract blockNumber"
  TRANSLATIONS["en,agent_node_behind"]="‚ö†Ô∏è Node is behind by %d blocks"
  TRANSLATIONS["en,agent_started"]="ü§ñ Aztec Monitoring Agent Started"
  TRANSLATIONS["en,agent_log_size_warning"]="‚ö†Ô∏è Log file cleaned due to size limit"
  TRANSLATIONS["en,agent_server_info"]="üåê Server: %s"
  TRANSLATIONS["en,agent_file_info"]="üóÉ File: %s"
  TRANSLATIONS["en,agent_size_info"]="üìè Previous size: %s bytes"
  TRANSLATIONS["en,agent_rpc_info"]="üîó RPC: %s"
  TRANSLATIONS["en,agent_error_info"]="üí¨ Error: %s"
  TRANSLATIONS["en,agent_block_info"]="üì¶ Contract block: %s"
  TRANSLATIONS["en,agent_log_block_info"]="üìù Logs block: %s"
  TRANSLATIONS["en,agent_time_info"]="üïí %s"
  TRANSLATIONS["en,agent_line_info"]="üìã Line: %s"
  TRANSLATIONS["en,agent_notifications_info"]="‚ÑπÔ∏è Notifications will be sent for issues"
  TRANSLATIONS["en,agent_node_synced"]="‚úÖ Node synced (block %s)"
  TRANSLATIONS["en,chatid_linked"]="‚úÖ ChatID successfully linked to Aztec Agent"
  TRANSLATIONS["en,invalid_token"]="Invalid Telegram bot token. Please try again."
  TRANSLATIONS["en,token_format"]="Token should be in format: 1234567890:ABCdefGHIJKlmNoPQRsTUVwxyZ"
  TRANSLATIONS["en,invalid_chatid"]="Invalid Telegram chat ID or the bot doesn't have access to this chat. Please try again."
  TRANSLATIONS["en,chatid_number"]="Chat ID must be a number (can start with - for group chats). Please try again."
  TRANSLATIONS["en,running_install_node"]="Running Install Aztec node script from GitHub..."
  TRANSLATIONS["en,failed_running_install_node"]="Failed to run Aztec node install script from GitHub..."
  TRANSLATIONS["en,failed_downloading_script"]="‚ùå Failed to download installation script"
  TRANSLATIONS["en,install_completed_successfully"]="‚úÖ Installation completed successfully"
  TRANSLATIONS["en,logs_stopped_by_user"]="‚ö† Log viewing stopped by user"
  TRANSLATIONS["en,installation_cancelled_by_user"]="‚úñ Installation cancelled by user"
  TRANSLATIONS["en,unknown_error_occurred"]="‚ö† An unknown error occurred during installation"
  TRANSLATIONS["en,stop_method_prompt"]="Choose method to stop Aztec node (docker-compose / cli): "
  TRANSLATIONS["en,enter_compose_path"]="Enter full path to folder with docker-compose.yml (/root/your_path or ./your_path): "
  TRANSLATIONS["en,docker_stop_success"]="Containers stopped and docker path saved to .env-aztec-agent"
  TRANSLATIONS["en,no_aztec_screen"]="No active Aztec screen sessions found."
  TRANSLATIONS["en,cli_stop_success"]="Aztec CLI node stopped and session saved to .env-aztec-agent"
  TRANSLATIONS["en,invalid_path"]="Invalid path or docker-compose.yml not found."
  TRANSLATIONS["en,starting_node"]="Starting Aztec node..."
  TRANSLATIONS["en,node_started"]="Aztec node started."
  TRANSLATIONS["en,missing_compose"]="Path to docker-compose.yml not found in .env-aztec-agent."
  TRANSLATIONS["en,run_type_not_set"]="RUN_TYPE not set in configuration."
  TRANSLATIONS["en,confirm_cli_run"]="Do you want to run the container in CLI mode?"
  TRANSLATIONS["en,run_type_set_to_cli"]="RUN_TYPE set to CLI."
  TRANSLATIONS["en,run_aborted"]="Run aborted by user."
  TRANSLATIONS["en,checking_aztec_version"]="Checking Aztec version..."
  TRANSLATIONS["en,aztec_version_failed"]="Failed to retrieve aztec version."
  TRANSLATIONS["en,aztec_node_version"]="Aztec Node version:"
  TRANSLATIONS["en,critical_error_found"]="Critical error detected"
  TRANSLATIONS["en,error_prefix"]="ERROR:"
  TRANSLATIONS["en,solution_prefix"]="Solution:"
  TRANSLATIONS["en,notifications_prompt"]="Do you want to receive additional notifications?"
  TRANSLATIONS["en,notifications_option1"]="1. Critical errors only"
  TRANSLATIONS["en,notifications_option2"]="2. All notifications (including committee participation and validators activity)"
  TRANSLATIONS["en,notifications_debug_warning"]="DEBUG log level is required for committee and slot statistics notifications"
  TRANSLATIONS["en,notifications_input_error"]="Error: please enter 1 or 2"
  TRANSLATIONS["en,choose_option_prompt"]="Choose option"
  TRANSLATIONS["en,committee_selected"]="üéâ You've been selected for the committee"
  TRANSLATIONS["en,found_validators"]="Found validators in committee: %s"
  TRANSLATIONS["en,epoch_info"]="Epoch %s"
  TRANSLATIONS["en,block_built"]="‚úÖ Block %s successfully built"
  TRANSLATIONS["en,slot_info"]="Slot %s"
  TRANSLATIONS["en,validators_prompt"]="Enter your validator addresses (comma separated, without spaces):"
  TRANSLATIONS["en,validators_format"]="Example: 0x123...,0x456...,0x789..."
  TRANSLATIONS["en,validators_empty"]="Error: Validators list cannot be empty"
  TRANSLATIONS["en,agent_notifications_full_info"]="‚ÑπÔ∏è Notifications will be sent for issues, committee, slot stats"
  TRANSLATIONS["en,attestation_status"]="‚ÑπÔ∏è Slot stats"
  #find peerID
  TRANSLATIONS["en,fetching_peer_info"]="Fetching peer information from API..."
  TRANSLATIONS["en,peer_found"]="Peer ID found in logs"
  TRANSLATIONS["en,peer_not_in_list"]="Peer not found in the public peers list"
  TRANSLATIONS["en,peer_id_not_critical"]="The presence or absence of a Peer ID in Nethermind.io is not a critical parameter. The data may be outdated."
  TRANSLATIONS["en,searching_latest"]="Searching in current data..."
  TRANSLATIONS["en,searching_archive"]="Searching in archive data..."
  TRANSLATIONS["en,peer_found_archive"]="Note: This peer was found in archive data"
  #
  TRANSLATIONS["en,cli_quit_old_sessions"]="Closed existing session:"
  #install section
  TRANSLATIONS["en,delete_node"]="üóëÔ∏è Deleting Aztec Node..."
  TRANSLATIONS["en,delete_confirm"]="Are you sure you want to delete the Aztec node? This will stop containers and remove all data. (y/n) "
  TRANSLATIONS["en,node_deleted"]="‚úÖ Aztec node successfully deleted"
  TRANSLATIONS["en,delete_canceled"]="‚úñ Node deletion canceled"
  TRANSLATIONS["en,delete_watchtower_confirm"]="Do you want to also delete Watchtower? (y/n) "
  TRANSLATIONS["en,watchtower_deleted"]="‚úÖ Watchtower successfully deleted"
  TRANSLATIONS["en,watchtower_kept"]="‚úÖ Watchtower kept intact"
  TRANSLATIONS["en,enter_tg_token"]="Enter Telegram bot token: "
  TRANSLATIONS["en,enter_tg_chat_id"]="Enter Telegram chat ID: "
  TRANSLATIONS["en,single_validator_mode"]="üîπ Single validator mode selected"
  TRANSLATIONS["en,multi_validator_mode"]="üîπ Multiple validators mode selected"
  TRANSLATIONS["en,enter_validator_keys"]="Enter validator private keys (comma-separated with 0x, up to 10): "
  TRANSLATIONS["en,enter_validator_key"]="Enter validator private key (with 0x): "
  TRANSLATIONS["en,enter_seq_publisher_key"]="Enter SEQ_PUBLISHER_PRIVATE_KEY (with 0x): "
  TRANSLATIONS["en,enter_yn"]="Please enter Y or N: "
  TRANSLATIONS["en,stopping_containers"]="Stopping containers..."
  TRANSLATIONS["en,removing_node_data"]="Removing Aztec node data..."
  TRANSLATIONS["en,stopping_watchtower"]="Stopping Watchtower..."
  TRANSLATIONS["en,removing_watchtower_data"]="Removing Watchtower data..."
  #update
  TRANSLATIONS["en,update_title"]="Updating Aztec node to the latest version"
  TRANSLATIONS["en,update_folder_error"]="Error: Folder $HOME/aztec does not exist"
  TRANSLATIONS["en,update_stopping"]="Stopping containers..."
  TRANSLATIONS["en,update_stop_error"]="Error stopping containers"
  TRANSLATIONS["en,update_pulling"]="Pulling latest aztecprotocol/aztec image..."
  TRANSLATIONS["en,update_pull_error"]="Error pulling image"
  TRANSLATIONS["en,update_starting"]="Starting updated node..."
  TRANSLATIONS["en,update_start_error"]="Error starting containers"
  TRANSLATIONS["en,update_success"]="Aztec node successfully updated to the latest version!"
  TRANSLATIONS["en,tag_check"]="Found tag: %s, replacing with latest"
  #downgrade
  TRANSLATIONS["en,downgrade_title"]="Downgrading Aztec node"
  TRANSLATIONS["en,downgrade_fetching"]="Fetching available versions list..."
  TRANSLATIONS["en,downgrade_fetch_error"]="Failed to get versions list"
  TRANSLATIONS["en,downgrade_available"]="Available versions (enter number):"
  TRANSLATIONS["en,downgrade_invalid_choice"]="Invalid choice, please try again"
  TRANSLATIONS["en,downgrade_selected"]="Selected version:"
  TRANSLATIONS["en,downgrade_folder_error"]="Error: Folder $HOME/aztec does not exist"
  TRANSLATIONS["en,downgrade_stopping"]="Stopping containers..."
  TRANSLATIONS["en,downgrade_stop_error"]="Error stopping containers"
  TRANSLATIONS["en,downgrade_pulling"]="Pulling aztecprotocol/aztec image:"
  TRANSLATIONS["en,downgrade_pull_error"]="Error pulling image"
  TRANSLATIONS["en,downgrade_updating"]="Updating configuration..."
  TRANSLATIONS["en,downgrade_update_error"]="Error updating docker-compose.yml"
  TRANSLATIONS["en,downgrade_starting"]="Starting node with version"
  TRANSLATIONS["en,downgrade_start_error"]="Error starting containers"
  TRANSLATIONS["en,downgrade_success"]="Aztec node successfully downgraded to version"
  #agent
  TRANSLATIONS["en,agent_systemd_added"]="Agent added (running every 37 seconds via systemd)"
  TRANSLATIONS["en,agent_timer_status"]="Timer status:"
  TRANSLATIONS["en,agent_timer_error"]="Error while creating systemd timer"
  TRANSLATIONS["en,removing_systemd_agent"]="Removing agent and systemd units..."
  TRANSLATIONS["en,agent_systemd_removed"]="Agent removed successfully"
  #version module
  TRANSLATIONS["en,update_changes"]="Changes in the update"

  # Russian translations
  TRANSLATIONS["ru,welcome"]="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,title"]="========= –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ========="
  TRANSLATIONS["ru,option1"]="1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –Ω–æ–¥—ã"
  TRANSLATIONS["ru,option2"]="2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≥–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–¥—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"
  TRANSLATIONS["ru,option3"]="3. –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —Ñ–∞–π–ª—ã"
  TRANSLATIONS["ru,option4"]="4. –ù–∞–π—Ç–∏ –∞–¥—Ä–µ—Å rollupAddress –≤ –ª–æ–≥–∞—Ö"
  TRANSLATIONS["ru,option5"]="5. –ù–∞–π—Ç–∏ PeerID –≤ –ª–æ–≥–∞—Ö"
  TRANSLATIONS["ru,option6"]="6. –ù–∞–π—Ç–∏ governanceProposerPayload –≤ –ª–æ–≥–∞—Ö"
  TRANSLATIONS["ru,option7"]="7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Proven L2 –±–ª–æ–∫ –∏ Sync Proof"
  TRANSLATIONS["ru,option8"]="8. –ò–∑–º–µ–Ω–∏—Ç—å RPC URL"
  TRANSLATIONS["ru,option9"]="9. –ü–æ–∏—Å–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
  TRANSLATIONS["ru,option10"]="10. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Aztec"
  TRANSLATIONS["ru,option11"]="11. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Aztec –Ω–æ–¥—É —Å Watchtower"
  TRANSLATIONS["ru,option12"]="12. –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É Aztec"
  TRANSLATIONS["ru,option13"]="13. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,option14"]="14. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,option15"]="15. –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É Aztec"
  TRANSLATIONS["ru,option16"]="16. –°–¥–µ–ª–∞—Ç—å –¥–∞—É–Ω–≥—Ä–µ–π–¥ –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,option17"]="17. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,option0"]="0. –í—ã—Ö–æ–¥"
  TRANSLATIONS["ru,rpc_change_prompt"]="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π RPC URL:"
  TRANSLATIONS["ru,rpc_change_success"]="‚úÖ RPC URL —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
  TRANSLATIONS["ru,choose_option"]="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
  TRANSLATIONS["ru,checking_deps"]="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:"
  TRANSLATIONS["ru,missing_tools"]="–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:"
  TRANSLATIONS["ru,install_prompt"]="–•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö —Å–µ–π—á–∞—Å? (Y/n):"
  TRANSLATIONS["ru,missing_required"]="‚ö†Ô∏è –ë–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∫—Ä–∏–ø—Ç –Ω–µ —Å–º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ."
  TRANSLATIONS["ru,rpc_prompt"]="–í–≤–µ–¥–∏—Ç–µ RPC URL:"
  TRANSLATIONS["ru,env_created"]="‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å RPC URL"
  TRANSLATIONS["ru,env_exists"]="‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª —Å RPC URL:"
  TRANSLATIONS["ru,search_container"]="üîç –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –∏–º–µ–Ω–µ–º 'aztec'..."
  TRANSLATIONS["ru,container_not_found"]="‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–º–µ–Ω–µ–º 'aztec' –Ω–µ –Ω–∞–π–¥–µ–Ω."
  TRANSLATIONS["ru,container_found"]="‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
  TRANSLATIONS["ru,get_block"]="üîó –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞..."
  TRANSLATIONS["ru,block_error"]="‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RPC –∏–ª–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç."
  TRANSLATIONS["ru,current_block"]="üì¶ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞:"
  TRANSLATIONS["ru,node_ok"]="‚úÖ –ù–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–ª–æ–∫"
  TRANSLATIONS["ru,node_behind"]="‚ö†Ô∏è –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–≥–∞—Ö. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–æ–¥–∞ –æ—Ç—Å—Ç–∞—ë—Ç."
  TRANSLATIONS["ru,search_rollup"]="üîç –ü–æ–∏—Å–∫ rollupAddress –≤ –ª–æ–≥–∞—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ 'aztec'..."
  TRANSLATIONS["ru,rollup_found"]="‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–π rollupAddress:"
  TRANSLATIONS["ru,rollup_not_found"]="‚ùå –ê–¥—Ä–µ—Å rollupAddress –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–≥–µ."
  TRANSLATIONS["ru,search_peer"]="üîç –ü–æ–∏—Å–∫ PeerID –≤ –ª–æ–≥–∞—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ 'aztec'..."
  TRANSLATIONS["ru,peer_not_found"]="‚ùå –í –ª–æ–≥–∞—Ö PeerID –Ω–µ –Ω–∞–π–¥–µ–Ω."
  TRANSLATIONS["ru,search_gov"]="üîç –ü–æ–∏—Å–∫ governanceProposerPayload –≤ –ª–æ–≥–∞—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ 'aztec'..."
  TRANSLATIONS["ru,gov_found"]="–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è governanceProposerPayload:"
  TRANSLATIONS["ru,gov_not_found"]="‚ùå –ù–∏ –æ–¥–Ω–æ–≥–æ governanceProposerPayload –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
  TRANSLATIONS["ru,gov_changed"]="üõë –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ governanceProposerPayload!"
  TRANSLATIONS["ru,gov_was"]="‚ö†Ô∏è –ë—ã–ª–æ:"
  TRANSLATIONS["ru,gov_now"]="–°—Ç–∞–ª–æ:"
  TRANSLATIONS["ru,gov_no_changes"]="‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ."
  TRANSLATIONS["ru,token_prompt"]="–í–≤–µ–¥–∏—Ç–µ Telegram Bot Token:"
  TRANSLATIONS["ru,chatid_prompt"]="–í–≤–µ–¥–∏—Ç–µ Telegram Chat ID:"
  TRANSLATIONS["ru,agent_added"]="‚úÖ –ê–≥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ cron –∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É."
  TRANSLATIONS["ru,agent_exists"]="‚ÑπÔ∏è –ê–≥–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å –≤ cron."
  TRANSLATIONS["ru,removing_agent"]="üóë –£–¥–∞–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –∏ cron-–∑–∞–¥–∞—á–∏..."
  TRANSLATIONS["ru,agent_removed"]="‚úÖ –ê–≥–µ–Ω—Ç –∏ cron-–∑–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω—ã."
  TRANSLATIONS["ru,goodbye"]="üëã –í—ã—Ö–æ–¥."
  TRANSLATIONS["ru,invalid_choice"]="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
  TRANSLATIONS["ru,searching"]="–ü–æ–∏—Å–∫..."
  TRANSLATIONS["ru,get_proven_block"]="üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ proven L2 –±–ª–æ–∫–∞..."
  TRANSLATIONS["ru,proven_block_found"]="‚úÖ –ù–æ–º–µ—Ä Proven L2 –±–ª–æ–∫–∞:"
  TRANSLATIONS["ru,proven_block_error"]="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä proven L2 –±–ª–æ–∫–∞."
  TRANSLATIONS["ru,get_sync_proof"]="üîç –ü–æ–ª—É—á–µ–Ω–∏–µ Sync Proof..."
  TRANSLATIONS["ru,sync_proof_found"]="‚úÖ Sync Proof:"
  TRANSLATIONS["ru,sync_proof_error"]="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å sync proof."
  TRANSLATIONS["ru,token_check"]="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞ –∏ ChatID..."
  TRANSLATIONS["ru,token_valid"]="‚úÖ Telegram —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
  TRANSLATIONS["ru,token_invalid"]="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Telegram —Ç–æ–∫–µ–Ω"
  TRANSLATIONS["ru,chatid_valid"]="‚úÖ ChatID –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏ –±–æ—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø"
  TRANSLATIONS["ru,chatid_invalid"]="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ChatID –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞"
  TRANSLATIONS["ru,agent_created"]="‚úÖ –ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
  TRANSLATIONS["ru,running_validator_script"]="–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –∏–∑ GitHub..."
  TRANSLATIONS["ru,failed_run_validator"]="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞."
  TRANSLATIONS["ru,enter_aztec_port_prompt"]="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞ Aztec"
  TRANSLATIONS["ru,port_saved_successfully"]="‚úÖ –ü–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
  TRANSLATIONS["ru,checking_port"]="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞"
  TRANSLATIONS["ru,port_not_available"]="Aztec –ø–æ—Ä—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞"
  TRANSLATIONS["ru,current_aztec_port"]="–¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç –Ω–æ–¥—ã Aztec:"
  TRANSLATIONS["ru,log_block_not_found"]="‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å 'Downloaded L2 block' –≤ –ª–æ–≥–∞—Ö."
  TRANSLATIONS["ru,log_block_extract_failed"]="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏:"
  TRANSLATIONS["ru,log_block_number"]="üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–ª–æ–∫ –∏–∑ –ª–æ–≥–æ–≤:"
  TRANSLATIONS["ru,log_behind_details"]="‚ö†Ô∏è –õ–æ–≥–∏ –æ—Ç—Å—Ç–∞—é—Ç. –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–ª–æ–∫ –∏–∑ –ª–æ–≥–æ–≤: %s, –∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: %s"
  TRANSLATIONS["ru,log_line_example"]="üîé –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ª–æ–≥–æ–≤:"
  TRANSLATIONS["ru,press_ctrlc"]="–ù–∞–∂–º–∏—Ç–µ Ctrl+C, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"
  TRANSLATIONS["ru,logs_starting"]="–õ–æ–≥–∏ –∑–∞–ø—É—Å—Ç—è—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."
  TRANSLATIONS["ru,return_main_menu"]="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
  TRANSLATIONS["ru,current_script_version"]="üìå –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞:"
  TRANSLATIONS["ru,new_version_avialable"]="üöÄ –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:"
  TRANSLATIONS["ru,new_version_update"]="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏ cron-–∞–≥–µ–Ω—Ç–∞"
  TRANSLATIONS["ru,version_up_to_date"]="‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"
  TRANSLATIONS["ru,agent_log_cleaned"]="‚úÖ –õ–æ–≥-—Ñ–∞–π–ª –æ—á–∏—â–µ–Ω."
  TRANSLATIONS["ru,agent_container_not_found"]="‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä Aztec –Ω–µ –Ω–∞–π–¥–µ–Ω"
  TRANSLATIONS["ru,agent_block_fetch_error"]="‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–æ–∫–∞"
  TRANSLATIONS["ru,agent_no_block_in_logs"]="‚ùå –ë–ª–æ–∫ 'Downloaded L2 block' –Ω–µ –Ω–∞–π–¥–µ–Ω"
  TRANSLATIONS["ru,agent_failed_extract_block"]="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞"
  TRANSLATIONS["ru,agent_node_behind"]="‚ö†Ô∏è –£–∑–µ–ª –æ—Ç—Å—Ç–∞–µ—Ç –Ω–∞ %d –±–ª–æ–∫–æ–≤"
  TRANSLATIONS["ru,agent_started"]="ü§ñ –ê–≥–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Aztec –∑–∞–ø—É—â–µ–Ω"
  TRANSLATIONS["ru,agent_log_size_warning"]="‚ö†Ô∏è –õ–æ–≥-—Ñ–∞–π–ª –æ—á–∏—â–µ–Ω –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞"
  TRANSLATIONS["ru,agent_server_info"]="üåê –°–µ—Ä–≤–µ—Ä: %s"
  TRANSLATIONS["ru,agent_file_info"]="üóÉ –§–∞–π–ª: %s"
  TRANSLATIONS["ru,agent_size_info"]="üìè –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–º–µ—Ä: %s –±–∞–π—Ç"
  TRANSLATIONS["ru,agent_rpc_info"]="üîó RPC: %s"
  TRANSLATIONS["ru,agent_error_info"]="üí¨ –û—à–∏–±–∫–∞: %s"
  TRANSLATIONS["ru,agent_block_info"]="üì¶ –ë–ª–æ–∫ –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ: %s"
  TRANSLATIONS["ru,agent_log_block_info"]="üìù –ë–ª–æ–∫ –≤ –ª–æ–≥–∞—Ö: %s"
  TRANSLATIONS["ru,agent_time_info"]="üïí %s"
  TRANSLATIONS["ru,agent_line_info"]="üìã –°—Ç—Ä–æ–∫–∞: %s"
  TRANSLATIONS["ru,agent_notifications_info"]="‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö"
  TRANSLATIONS["ru,agent_node_synced"]="‚úÖ –£–∑–µ–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω (–±–ª–æ–∫ %s)"
  TRANSLATIONS["ru,chatid_linked"]="‚úÖ ChatID —É—Å–ø–µ—à–Ω–æ —Å–≤—è–∑–∞–Ω —Å Aztec Agent"
  TRANSLATIONS["ru,invalid_token"]="–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
  TRANSLATIONS["ru,token_format"]="–¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 1234567890:ABCdefGHIJKlmNoPQRsTUVwxyZ"
  TRANSLATIONS["ru,invalid_chatid"]="–ù–µ–≤–µ—Ä–Ω—ã–π Chat ID –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —á–∞—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
  TRANSLATIONS["ru,chatid_number"]="Chat ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å - –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
  TRANSLATIONS["ru,running_install_node"]="–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Aztec node –∏–∑ GitHub..."
  TRANSLATIONS["ru,failed_running_install_node"]="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–∑–ª–∞ Aztec –∏–∑ GitHub..."
  TRANSLATIONS["ru,failed_downloading_script"]="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
  TRANSLATIONS["ru,install_completed_successfully"]="‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
  TRANSLATIONS["ru,logs_stopped_by_user"]="‚ö† –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
  TRANSLATIONS["ru,installation_cancelled_by_user"]="‚úñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
  TRANSLATIONS["ru,unknown_error_occurred"]="‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"
  TRANSLATIONS["ru,stop_method_prompt"]="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Aztec (docker-compose / cli): "
  TRANSLATIONS["ru,enter_compose_path"]="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å docker-compose.yml (/root/your_path or ./your_path): "
  TRANSLATIONS["ru,docker_stop_success"]="–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –ø—É—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ .env-aztec-agent"
  TRANSLATIONS["ru,no_aztec_screen"]="–ê–∫—Ç–∏–≤–Ω—ã—Ö screen-—Å–µ—Å—Å–∏–π —Å Aztec –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
  TRANSLATIONS["ru,cli_stop_success"]="–ù–æ–¥–∞ Aztec CLI –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ .env-aztec-agent"
  TRANSLATIONS["ru,invalid_path"]="–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ —Ñ–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω."
  TRANSLATIONS["ru,starting_node"]="–ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,node_started"]="–ù–æ–¥–∞ Aztec –∑–∞–ø—É—â–µ–Ω–∞."
  TRANSLATIONS["ru,missing_compose"]="–ü—É—Ç—å –∫ docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env-aztec-agent."
  TRANSLATIONS["ru,run_type_not_set"]="RUN_TYPE –Ω–µ –∑–∞–¥–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."
  TRANSLATIONS["ru,confirm_cli_run"]="–í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ CLI —Ä–µ–∂–∏–º–µ?"
  TRANSLATIONS["ru,run_type_set_to_cli"]="RUN_TYPE —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ CLI."
  TRANSLATIONS["ru,run_aborted"]="–ó–∞–ø—É—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
  TRANSLATIONS["ru,checking_aztec_version"]="–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Aztec..."
  TRANSLATIONS["ru,aztec_version_failed"]="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é aztec."
  TRANSLATIONS["ru,aztec_node_version"]="–í–µ—Ä—Å–∏—è –Ω–æ–¥—ã Aztec:"
  TRANSLATIONS["ru,critical_error_found"]="–ù–∞–π–¥–µ–Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞"
  TRANSLATIONS["ru,error_prefix"]="–û–®–ò–ë–ö–ê:"
  TRANSLATIONS["ru,solution_prefix"]="–†–µ—à–µ–Ω–∏–µ:"
  TRANSLATIONS["ru,notifications_prompt"]="–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?"
  TRANSLATIONS["ru,notifications_option1"]="1. –¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏"
  TRANSLATIONS["ru,notifications_option2"]="2. –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –∫–æ–º–∏—Ç–µ—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞)"
  TRANSLATIONS["ru,notifications_debug_warning"]="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –≤ –∫–æ–º–∏—Ç–µ—Ç –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ —Å–ª–æ—Ç–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤ DEBUG"
  TRANSLATIONS["ru,notifications_input_error"]="–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2"
  TRANSLATIONS["ru,choose_option_prompt"]="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç"
  TRANSLATIONS["ru,committee_selected"]="üéâ –¢–µ–±—è –≤—ã–±—Ä–∞–ª–∏ –≤ –∫–æ–º–∏—Ç–µ—Ç"
  TRANSLATIONS["ru,found_validators"]="–ù–∞–π–¥–µ–Ω—ã –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –≤ –∫–æ–º–∏—Ç–µ—Ç–µ: %s"
  TRANSLATIONS["ru,epoch_info"]="–≠–ø–æ—Ö–∞ %s"
  TRANSLATIONS["ru,block_built"]="‚úÖ –ë–ª–æ–∫ %s —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω"
  TRANSLATIONS["ru,slot_info"]="–°–ª–æ—Ç %s"
  TRANSLATIONS["ru,validators_prompt"]="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å–∞ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤):"
  TRANSLATIONS["ru,validators_format"]="–ü—Ä–∏–º–µ—Ä: 0x123...,0x456...,0x789..."
  TRANSLATIONS["ru,validators_empty"]="–û—à–∏–±–∫–∞: –°–ø–∏—Å–æ–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
  TRANSLATIONS["ru,agent_notifications_full_info"]="‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –≤—ã–±–æ—Ä–µ –≤ –∫–æ–º–∏—Ç–µ—Ç, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ —Å–ª–æ—Ç–æ–≤"
  TRANSLATIONS["ru,attestation_status"]="‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª–æ—Ç–∞"
  #peerID
  TRANSLATIONS["ru,fetching_peer_info"]="–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏—Ä–µ –∏–∑ API..."
  TRANSLATIONS["ru,peer_found"]="Peer ID –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–≥–∞—Ö"
  TRANSLATIONS["ru,peer_not_in_list"]="–ü–∏—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø—É–±–ª–∏—á–Ω–æ–º —Å–ø–∏—Å–∫–µ"
  TRANSLATIONS["ru,peer_id_not_critical"]="–ù–∞–ª–∏—á–∏–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ Peer ID –≤ Nethermind.io –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º. –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏."
  TRANSLATIONS["ru,searching_latest"]="–ü–æ–∏—Å–∫ –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
  TRANSLATIONS["ru,searching_archive"]="–ü–æ–∏—Å–∫ –≤ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
  TRANSLATIONS["ru,peer_found_archive"]="–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ—Ç –ø–∏—Ä –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
  #
  TRANSLATIONS["ru,cli_quit_old_sessions"]="–ó–∞–∫—Ä—ã—Ç–∞ —Å—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è:"
  #delete section
  TRANSLATIONS["ru,delete_node"]="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,delete_confirm"]="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É Aztec? –≠—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ. (y/n) "
  TRANSLATIONS["ru,node_deleted"]="‚úÖ –ù–æ–¥–∞ Aztec —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞"
  TRANSLATIONS["ru,delete_canceled"]="‚úñ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã –æ—Ç–º–µ–Ω–µ–Ω–æ"
  TRANSLATIONS["ru,delete_watchtower_confirm"]="–•–æ—Ç–∏—Ç–µ —Ç–∞–∫–∂–µ —É–¥–∞–ª–∏—Ç—å Watchtower? (y/n) "
  TRANSLATIONS["ru,watchtower_deleted"]="‚úÖ Watchtower —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
  TRANSLATIONS["ru,watchtower_kept"]="‚úÖ Watchtower –æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
  TRANSLATIONS["ru,enter_tg_token"]="–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞: "
  TRANSLATIONS["ru,enter_tg_chat_id"]="–í–≤–µ–¥–∏—Ç–µ ID Telegram —á–∞—Ç–∞: "
  TRANSLATIONS["ru,single_validator_mode"]="üîπ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º –æ–¥–Ω–æ–≥–æ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
  TRANSLATIONS["ru,multi_validator_mode"]="üîπ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤"
  TRANSLATIONS["ru,enter_validator_keys"]="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ (c 0x —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –¥–æ 10): "
  TRANSLATIONS["ru,enter_validator_key"]="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ (—Å 0x): "
  TRANSLATIONS["ru,enter_seq_publisher_key"]="–í–≤–µ–¥–∏—Ç–µ SEQ_PUBLISHER_PRIVATE_KEY (—Å 0x): "
  TRANSLATIONS["ru,enter_yn"]="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ Y –∏–ª–∏ N: "
  TRANSLATIONS["ru,stopping_containers"]="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
  TRANSLATIONS["ru,removing_node_data"]="–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–¥—ã Aztec..."
  TRANSLATIONS["ru,stopping_watchtower"]="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Watchtower..."
  TRANSLATIONS["ru,removing_watchtower_data"]="–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Watchtower..."
  #update
  TRANSLATIONS["ru,update_title"]="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Aztec –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
  TRANSLATIONS["ru,update_folder_error"]="–û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ $HOME/aztec –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
  TRANSLATIONS["ru,update_stopping"]="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
  TRANSLATIONS["ru,update_stop_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  TRANSLATIONS["ru,update_pulling"]="–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–∑–∞ aztecprotocol/aztec..."
  TRANSLATIONS["ru,update_pull_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—Ä–∞–∑–∞"
  TRANSLATIONS["ru,update_starting"]="–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ–¥—ã..."
  TRANSLATIONS["ru,update_start_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  TRANSLATIONS["ru,update_success"]="–ù–æ–¥–∞ Aztec —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏!"
  TRANSLATIONS["ru,tag_check"]="–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–µ–≥: %s, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ latest"
  #downgrade
  TRANSLATIONS["ru,downgrade_title"]="–î–∞—É–Ω–≥—Ä–µ–π–¥ –Ω–æ–¥—ã Aztec"
  TRANSLATIONS["ru,downgrade_fetching"]="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Ä—Å–∏–π..."
  TRANSLATIONS["ru,downgrade_fetch_error"]="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–µ—Ä—Å–∏–π"
  TRANSLATIONS["ru,downgrade_available"]="–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ (–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä):"
  TRANSLATIONS["ru,downgrade_invalid_choice"]="–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
  TRANSLATIONS["ru,downgrade_selected"]="–í—ã–±—Ä–∞–Ω–∞ –≤–µ—Ä—Å–∏—è:"
  TRANSLATIONS["ru,downgrade_folder_error"]="–û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ $HOME/aztec –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
  TRANSLATIONS["ru,downgrade_stopping"]="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
  TRANSLATIONS["ru,downgrade_stop_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  TRANSLATIONS["ru,downgrade_pulling"]="–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ aztecprotocol/aztec:"
  TRANSLATIONS["ru,downgrade_pull_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—Ä–∞–∑–∞"
  TRANSLATIONS["ru,downgrade_updating"]="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
  TRANSLATIONS["ru,downgrade_update_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ docker-compose.yml"
  TRANSLATIONS["ru,downgrade_starting"]="–ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã —Å –≤–µ—Ä—Å–∏–µ–π"
  TRANSLATIONS["ru,downgrade_start_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
  TRANSLATIONS["ru,downgrade_success"]="–ù–æ–¥–∞ Aztec —É—Å–ø–µ—à–Ω–æ –¥–∞—É–Ω–≥—Ä–µ–π–¥–Ω—É—Ç–∞ –¥–æ –≤–µ—Ä—Å–∏–∏"
  #agent
  TRANSLATIONS["ru,agent_systemd_added"]="–ê–≥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω (–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 37 —Å–µ–∫—É–Ω–¥ —á–µ—Ä–µ–∑ systemd)"
  TRANSLATIONS["ru,agent_timer_status"]="–°—Ç–∞—Ç—É—Å —Ç–∞–π–º–µ—Ä–∞:"
  TRANSLATIONS["ru,agent_timer_error"]="–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ systemd —Ç–∞–π–º–µ—Ä–∞"
  TRANSLATIONS["ru,removing_systemd_agent"]="–£–¥–∞–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –∏ systemd unit-—Ñ–∞–π–ª–æ–≤..."
  TRANSLATIONS["ru,agent_systemd_removed"]="–ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω"
  #version module
  TRANSLATIONS["ru,update_changes"]="–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏"

  # Turkish translations
  TRANSLATIONS["tr,welcome"]="Aztec d√ºƒü√ºm izleme betiƒüine ho≈ü geldiniz"
  TRANSLATIONS["tr,title"]="========= Ana Men√º ========="
  TRANSLATIONS["tr,option1"]="1. Konteyner ve d√ºƒü√ºm senkronizasyonunun kontrol et"
  TRANSLATIONS["tr,option2"]="2. Bildirimlerle d√ºƒü√ºm izleme aracƒ±sƒ±nƒ± y√ºkleyin"
  TRANSLATIONS["tr,option3"]="3. D√ºƒü√ºm izleme aracƒ±sƒ±nƒ± ve dosyalarƒ±nƒ± kaldƒ±rƒ±n"
  TRANSLATIONS["tr,option4"]="4. Loglarda rollupAddress bul"
  TRANSLATIONS["tr,option5"]="5. Loglarda PeerID bul"
  TRANSLATIONS["tr,option6"]="6. Loglarda governanceProposerPayload bul"
  TRANSLATIONS["tr,option7"]="7. Kanƒ±tlanmƒ±≈ü L2 Bloƒüunu ve Sync Proof'u Kontrol Et"
  TRANSLATIONS["tr,option8"]="8. RPC URL'sini deƒüi≈ütir"
  TRANSLATIONS["tr,option9"]="9. Validator ara ve durumunu kontrol et"
  TRANSLATIONS["tr,option10"]="10. Aztec loglarƒ±nƒ± g√∂r√ºnt√ºle"
  TRANSLATIONS["tr,option11"]="11. Watchtower ile birlikte Aztec Node Kurulumu"
  TRANSLATIONS["tr,option12"]="12. Aztec d√ºƒü√ºm√ºn√º sil"
  TRANSLATIONS["tr,option13"]="13. Aztec d√ºƒü√ºm konteynerlerini durdur"
  TRANSLATIONS["tr,option14"]="14. Aztec d√ºƒü√ºm konteynerlerini ba≈ülat"
  TRANSLATIONS["tr,option15"]="15. Aztec d√ºƒü√ºm√ºn√º g√ºncelle"
  TRANSLATIONS["tr,option16"]="16. Aztec d√ºƒü√ºm√ºn√º eski s√ºr√ºme d√º≈ü√ºr"
  TRANSLATIONS["tr,option17"]="17. Aztek s√ºr√ºm√ºn√º kontrol edin"
  TRANSLATIONS["tr,option0"]="0. √áƒ±kƒ±≈ü"
  TRANSLATIONS["tr,rpc_change_prompt"]="Yeni RPC URL'sini girin:"
  TRANSLATIONS["tr,rpc_change_success"]="‚úÖ RPC URL ba≈üarƒ±yla g√ºncellendi"
  TRANSLATIONS["tr,choose_option"]="Se√ßenek se√ßin:"
  TRANSLATIONS["tr,checking_deps"]="üîç Gerekli bile≈üenler kontrol ediliyor:"
  TRANSLATIONS["tr,missing_tools"]="Gerekli bile≈üenler eksik:"
  TRANSLATIONS["tr,install_prompt"]="≈ûimdi y√ºklemek istiyor musunuz? (Y/n):"
  TRANSLATIONS["tr,missing_required"]="‚ö†Ô∏è Betik, gerekli bile≈üenler olmadan √ßalƒ±≈üamaz. √áƒ±kƒ±lƒ±yor."
  TRANSLATIONS["tr,rpc_prompt"]="RPC URL'sini girin:"
  TRANSLATIONS["tr,env_created"]="‚úÖ RPC URL'si ile .env dosyasƒ± olu≈üturuldu"
  TRANSLATIONS["tr,env_exists"]="‚úÖ Mevcut .env dosyasƒ± kullanƒ±lƒ±yor, RPC URL:"
  TRANSLATIONS["tr,search_container"]="üîç 'aztec' konteyneri aranƒ±yor..."
  TRANSLATIONS["tr,container_not_found"]="‚ùå 'aztec' konteyneri bulunamadƒ±."
  TRANSLATIONS["tr,container_found"]="‚úÖ Konteyner bulundu:"
  TRANSLATIONS["tr,get_block"]="üîó Kontraktan mevcut blok alƒ±nƒ±yor..."
  TRANSLATIONS["tr,block_error"]="‚ùå Hata: Blok numarasƒ± alƒ±namadƒ±. RPC veya kontratƒ± kontrol edin."
  TRANSLATIONS["tr,current_block"]="üì¶ Mevcut blok numarasƒ±:"
  TRANSLATIONS["tr,node_ok"]="‚úÖ D√ºƒü√ºm √ßalƒ±≈üƒ±yor ve mevcut bloƒüu i≈üliyor"
  TRANSLATIONS["tr,node_behind"]="‚ö†Ô∏è Mevcut blok loglarda bulunamadƒ±. D√ºƒü√ºm geride olabilir."
  TRANSLATIONS["tr,search_rollup"]="üîç 'aztec' konteyner loglarƒ±nda rollupAddress aranƒ±yor..."
  TRANSLATIONS["tr,rollup_found"]="‚úÖ Mevcut rollupAddress:"
  TRANSLATIONS["tr,rollup_not_found"]="‚ùå Loglarda rollupAddress bulunamadƒ±."
  TRANSLATIONS["tr,search_peer"]="üîç 'aztec' konteyner loglarƒ±nda PeerID aranƒ±yor..."
  TRANSLATIONS["tr,peer_not_found"]="‚ùå Loglarda PeerID bulunamadƒ±."
  TRANSLATIONS["tr,search_gov"]="üîç 'aztec' konteyner loglarƒ±nda governanceProposerPayload aranƒ±yor..."
  TRANSLATIONS["tr,gov_found"]="Bulunan governanceProposerPayload deƒüerleri:"
  TRANSLATIONS["tr,gov_not_found"]="‚ùå governanceProposerPayload bulunamadƒ±."
  TRANSLATIONS["tr,gov_changed"]="üõë GovernanceProposerPayload deƒüi≈üikliƒüi tespit edildi!"
  TRANSLATIONS["tr,gov_was"]="‚ö†Ô∏è √ñnceki:"
  TRANSLATIONS["tr,gov_now"]="≈ûimdi:"
  TRANSLATIONS["tr,gov_no_changes"]="‚úÖ Deƒüi≈üiklik tespit edilmedi."
  TRANSLATIONS["tr,token_prompt"]="Telegram Bot Token'ƒ±nƒ± girin:"
  TRANSLATIONS["tr,chatid_prompt"]="Telegram Chat ID'yi girin:"
  TRANSLATIONS["tr,agent_added"]="‚úÖ Aracƒ± cron'a eklendi ve her dakika √ßalƒ±≈üacak."
  TRANSLATIONS["tr,agent_exists"]="‚ÑπÔ∏è Aracƒ± zaten cron'da mevcut."
  TRANSLATIONS["tr,removing_agent"]="üóë Aracƒ± ve cron g√∂revi kaldƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,agent_removed"]="‚úÖ Aracƒ± ve cron g√∂revi kaldƒ±rƒ±ldƒ±."
  TRANSLATIONS["tr,goodbye"]="üëã G√ºle g√ºle."
  TRANSLATIONS["tr,invalid_choice"]="‚ùå Ge√ßersiz se√ßim. Tekrar deneyin."
  TRANSLATIONS["tr,searching"]="Aranƒ±yor..."
  TRANSLATIONS["tr,get_proven_block"]="üîç Kanƒ±tlanmƒ±≈ü L2 blok numarasƒ± alƒ±nƒ±yor..."
  TRANSLATIONS["tr,proven_block_found"]="‚úÖ Kanƒ±tlanmƒ±≈ü L2 Blok Numarasƒ±:"
  TRANSLATIONS["tr,proven_block_error"]="‚ùå Kanƒ±tlanmƒ±≈ü L2 blok numarasƒ± alƒ±namadƒ±."
  TRANSLATIONS["tr,get_sync_proof"]="üîç Sync Proof alƒ±nƒ±yor..."
  TRANSLATIONS["tr,sync_proof_found"]="‚úÖ Sync Proof:"
  TRANSLATIONS["tr,sync_proof_error"]="‚ùå Sync Proof alƒ±namadƒ±."
  TRANSLATIONS["tr,token_check"]="üîç Telegram token ve ChatID kontrol ediliyor..."
  TRANSLATIONS["tr,token_valid"]="‚úÖ Telegram token ge√ßerli"
  TRANSLATIONS["tr,token_invalid"]="‚ùå Ge√ßersiz Telegram token"
  TRANSLATIONS["tr,chatid_valid"]="‚úÖ ChatID ge√ßerli ve bota eri≈üim var"
  TRANSLATIONS["tr,chatid_invalid"]="‚ùå Ge√ßersiz ChatID veya bota eri≈üim yok"
  TRANSLATIONS["tr,agent_created"]="‚úÖ Aracƒ± ba≈üarƒ±yla olu≈üturuldu ve yapƒ±landƒ±rƒ±ldƒ±!"
  TRANSLATIONS["tr,running_validator_script"]="GitHub'dan Check Validator betiƒüi √ßalƒ±≈ütƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,failed_run_validator"]="Check Validator betiƒüi √ßalƒ±≈ütƒ±rƒ±lamadƒ±."
  TRANSLATIONS["tr,enter_aztec_port_prompt"]="Aztec d√ºƒü√ºm port numarasƒ±nƒ± girin"
  TRANSLATIONS["tr,port_saved_successfully"]="‚úÖ Port ba≈üarƒ±yla kaydedildi"
  TRANSLATIONS["tr,checking_port"]="Port kontrol ediliyor"
  TRANSLATIONS["tr,port_not_available"]="Aztec portu ≈üurada mevcut deƒüil:"
  TRANSLATIONS["tr,current_aztec_port"]="Mevcut Aztec d√ºƒü√ºm portu:"
  TRANSLATIONS["tr,log_block_not_found"]="‚ùå Loglarda 'Downloaded L2 block' i√ßeren satƒ±r bulunamadƒ±."
  TRANSLATIONS["tr,log_block_extract_failed"]="‚ùå Blok numarasƒ± satƒ±rdan √ßƒ±karƒ±lamadƒ±:"
  TRANSLATIONS["tr,log_block_number"]="üìÑ Loglardaki son blok:"
  TRANSLATIONS["tr,log_behind_details"]="‚ö†Ô∏è Loglar geride. Loglardaki son blok: %s, kontraktaki: %s"
  TRANSLATIONS["tr,log_line_example"]="üîé √ñrnek log satƒ±rƒ±:"
  TRANSLATIONS["tr,press_ctrlc"]="Men√ºye d√∂nmek i√ßin Ctrl+C'ye basƒ±n"
  TRANSLATIONS["tr,logs_starting"]="Loglar 5 saniye i√ßinde ba≈ülayacak..."
  TRANSLATIONS["tr,return_main_menu"]="Ana men√ºye d√∂n√ºl√ºyor..."
  TRANSLATIONS["tr,current_script_version"]="üìå Mevcut betik versiyonu:"
  TRANSLATIONS["tr,new_version_avialable"]="üöÄ Yeni versiyon mevcut:"
  TRANSLATIONS["tr,new_version_update"]="L√ºtfen betiƒüinizi ve cron aracƒ±sƒ±nƒ± g√ºncelleyin"
  TRANSLATIONS["tr,version_up_to_date"]="‚úÖ En son versiyonu kullanƒ±yorsunuz"
  TRANSLATIONS["tr,agent_log_cleaned"]="‚úÖ Log dosyasƒ± temizlendi."
  TRANSLATIONS["tr,agent_container_not_found"]="‚ùå Aztec Konteyneri Bulunamadƒ±"
  TRANSLATIONS["tr,agent_block_fetch_error"]="‚ùå Blok Alma Hatasƒ±"
  TRANSLATIONS["tr,agent_no_block_in_logs"]="‚ùå 'Downloaded L2 block' bulunamadƒ±"
  TRANSLATIONS["tr,agent_failed_extract_block"]="‚ùå Blok numarasƒ± √ßƒ±karƒ±lamadƒ±"
  TRANSLATIONS["tr,agent_node_behind"]="‚ö†Ô∏è D√ºƒü√ºm %d blok geride"
  TRANSLATIONS["tr,agent_started"]="ü§ñ Aztec ƒ∞zleme Aracƒ± Ba≈ülatƒ±ldƒ±"
  TRANSLATIONS["tr,agent_log_size_warning"]="‚ö†Ô∏è Boyut sƒ±nƒ±rƒ± nedeniyle log dosyasƒ± temizlendi"
  TRANSLATIONS["tr,agent_server_info"]="üåê Sunucu: %s"
  TRANSLATIONS["tr,agent_file_info"]="üóÉ Dosya: %s"
  TRANSLATIONS["tr,agent_size_info"]="üìè √ñnceki boyut: %s bayt"
  TRANSLATIONS["tr,agent_rpc_info"]="üîó RPC: %s"
  TRANSLATIONS["tr,agent_error_info"]="üí¨ Hata: %s"
  TRANSLATIONS["tr,agent_block_info"]="üì¶ Kontrakt blok: %s"
  TRANSLATIONS["tr,agent_log_block_info"]="üìù Log blok: %s"
  TRANSLATIONS["tr,agent_time_info"]="üïí %s"
  TRANSLATIONS["tr,agent_line_info"]="üìã Satƒ±r: %s"
  TRANSLATIONS["tr,agent_notifications_info"]="‚ÑπÔ∏è Sorunlar i√ßin bildirimler g√∂nderilecek"
  TRANSLATIONS["tr,agent_node_synced"]="‚úÖ D√ºƒü√ºm senkronize (blok %s)"
  TRANSLATIONS["tr,chatid_linked"]="‚úÖ ChatID ba≈üarƒ±yla Aztec Aracƒ±'na baƒülandƒ±"
  TRANSLATIONS["tr,invalid_token"]="Ge√ßersiz Telegram bot tokenƒ±. L√ºtfen tekrar deneyin."
  TRANSLATIONS["tr,token_format"]="Token formatƒ±: 1234567890:ABCdefGHIJKlmNoPQRsTUVwxyZ"
  TRANSLATIONS["tr,invalid_chatid"]="Ge√ßersiz Telegram chat ID veya botun bu sohbete eri≈üimi yok. L√ºtfen tekrar deneyin."
  TRANSLATIONS["tr,chatid_number"]="Chat ID bir sayƒ± olmalƒ±dƒ±r (grup sohbetleri i√ßin - ile ba≈ülayabilir). L√ºtfen tekrar deneyin."
  TRANSLATIONS["tr,running_install_node"]="GitHub'dan Aztec node kurulum betiƒüi √ßalƒ±≈ütƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,failed_running_install_node"]="GitHub'dan Aztec d√ºƒü√ºm y√ºkleme betiƒüi √ßalƒ±≈ütƒ±rƒ±lamadƒ±..."
  TRANSLATIONS["tr,failed_downloading_script"]="‚ùå Kurulum betiƒüi indirilemedi"
  TRANSLATIONS["tr,install_completed_successfully"]="‚úÖ Kurulum ba≈üarƒ±yla tamamlandƒ±"
  TRANSLATIONS["tr,logs_stopped_by_user"]="‚ö† Log g√∂r√ºnt√ºleme kullanƒ±cƒ± tarafƒ±ndan durduruldu"
  TRANSLATIONS["tr,installation_cancelled_by_user"]="‚úñ Kurulum kullanƒ±cƒ± tarafƒ±ndan iptal edildi"
  TRANSLATIONS["tr,unknown_error_occurred"]="‚ö† Kurulum sƒ±rasƒ±nda bilinmeyen bir hata olu≈ütu"
  TRANSLATIONS["tr,stop_method_prompt"]="Aztec d√ºƒü√ºm√ºn√º durdurma y√∂ntemi se√ßin (docker-compose / cli): "
  TRANSLATIONS["tr,enter_compose_path"]="docker-compose.yml dosyasƒ±nƒ±n bulunduƒüu klas√∂r√ºn tam yolunu girin  (/root/your_path veya ./your_path): "
  TRANSLATIONS["tr,docker_stop_success"]="Konteynerler durduruldu ve yol .env-aztec-agent dosyasƒ±na kaydedildi"
  TRANSLATIONS["tr,no_aztec_screen"]="Aktif Aztec screen oturumu bulunamadƒ±."
  TRANSLATIONS["tr,cli_stop_success"]="Aztec CLI d√ºƒü√ºm√º durduruldu ve oturum .env-aztec-agent dosyasƒ±na kaydedildi"
  TRANSLATIONS["tr,invalid_path"]="Ge√ßersiz yol veya docker-compose.yml dosyasƒ± bulunamadƒ±."
  TRANSLATIONS["tr,starting_node"]="Aztec d√ºƒü√ºm√º ba≈ülatƒ±lƒ±yor..."
  TRANSLATIONS["tr,node_started"]="Aztec d√ºƒü√ºm√º ba≈ülatƒ±ldƒ±."
  TRANSLATIONS["tr,missing_compose"]="docker-compose.yml yolu .env-aztec-agent dosyasƒ±nda bulunamadƒ±."
  TRANSLATIONS["tr,run_type_not_set"]="Yapƒ±landƒ±rmada RUN_TYPE ayarlanmamƒ±≈ü."
  TRANSLATIONS["tr,confirm_cli_run"]="Kapsayƒ±cƒ±yƒ± CLI modunda √ßalƒ±≈ütƒ±rmak istiyor musunuz?"
  TRANSLATIONS["tr,run_type_set_to_cli"]="RUN_TYPE CLI olarak ayarlandƒ±."
  TRANSLATIONS["tr,run_aborted"]="√áalƒ±≈ütƒ±rma kullanƒ±cƒ± tarafƒ±ndan iptal edildi."
  TRANSLATIONS["tr,checking_aztec_version"]="Aztec s√ºr√ºm√º kontrol ediliyor..."
  TRANSLATIONS["tr,aztec_version_failed"]="Aztec s√ºr√ºm√º alƒ±namadƒ±."
  TRANSLATIONS["tr,aztec_node_version"]="Aztec Node s√ºr√ºm√º:"
  TRANSLATIONS["tr,critical_error_found"]="Kritik hata tespit edildi"
  TRANSLATIONS["tr,error_prefix"]="HATA:"
  TRANSLATIONS["tr,solution_prefix"]="√á√∂z√ºm:"
  TRANSLATIONS["tr,notifications_prompt"]="Ek bildirim almak istiyor musunuz?"
  TRANSLATIONS["tr,notifications_option1"]="1. Sadece kritik hatalar"
  TRANSLATIONS["tr,notifications_option2"]="2. T√ºm bildirimler (komite katƒ±lƒ±mƒ± ve doƒürulayƒ±cƒ± etkinliƒüi dahil)"
  TRANSLATIONS["tr,notifications_debug_warning"]="Komite ve slot istatistik bildirimleri i√ßin DEBUG g√ºnl√ºk seviyesi gereklidir"
  TRANSLATIONS["tr,notifications_input_error"]="Hata: l√ºtfen 1 veya 2 girin"
  TRANSLATIONS["tr,choose_option_prompt"]="Se√ßenek belirleyin"
  TRANSLATIONS["tr,committee_selected"]="üéâ Komiteye se√ßildiniz"
  TRANSLATIONS["tr,found_validators"]="Komitede bulunan doƒürulayƒ±cƒ±lar: %s"
  TRANSLATIONS["tr,epoch_info"]="D√∂nem %s"
  TRANSLATIONS["tr,block_built"]="‚úÖ %s bloƒüu ba≈üarƒ±yla olu≈üturuldu"
  TRANSLATIONS["tr,slot_info"]="Slot %s"
  TRANSLATIONS["tr,validators_prompt"]="Validator adreslerinizi girin (virg√ºlle ayƒ±rarak, bo≈üluk olmadan):"
  TRANSLATIONS["tr,validators_format"]="√ñrnek: 0x123...,0x456...,0x789..."
  TRANSLATIONS["tr,validators_empty"]="Hata: Validator listesi bo≈ü olamaz"
  TRANSLATIONS["tr,agent_notifications_full_info"]="‚ÑπÔ∏è Sorunlar, komite ve slot istatistikleri i√ßin bildirimler g√∂nderilecektir"
  TRANSLATIONS["tr,attestation_status"]="‚ÑπÔ∏è Slot istatistik"
  #peerID
  TRANSLATIONS["tr,fetching_peer_info"]="API'den e≈ü (peer) bilgisi alƒ±nƒ±yor..."
  TRANSLATIONS["tr,peer_found"]="Loglarda Peer ID bulundu"
  TRANSLATIONS["tr,peer_not_in_list"]="E≈ü, genel listede bulunamadƒ±"
  TRANSLATIONS["tr,peer_id_not_critical"]="Nethermind.io'da Peer ID'nin olup olmamasƒ± kritik bir parametre deƒüildir. Veriler g√ºncel olmayabilir."
  TRANSLATIONS["tr,searching_latest"]="G√ºncel verilerde aranƒ±yor..."
  TRANSLATIONS["tr,searching_archive"]="Ar≈üiv verilerinde aranƒ±yor..."
  TRANSLATIONS["tr,peer_found_archive"]="Not: Bu e≈ü (peer) ar≈üiv verilerinde bulundu"
  #
  TRANSLATIONS["tr,cli_quit_old_sessions"]="Eski oturum kapatƒ±ldƒ±:"
  # install section
  TRANSLATIONS["tr,delete_node"]="üóëÔ∏è Aztec Node siliniyor..."
  TRANSLATIONS["tr,delete_confirm"]="Aztec node'u silmek istediƒüinize emin misiniz? Bu i≈ülem konteynerleri durduracak ve t√ºm verileri silecektir. (y/n) "
  TRANSLATIONS["tr,node_deleted"]="‚úÖ Aztec node ba≈üarƒ±yla silindi"
  TRANSLATIONS["tr,delete_canceled"]="‚úñ Node silme i≈ülemi iptal edildi"
  TRANSLATIONS["tr,delete_watchtower_confirm"]="Watchtower'ƒ± da silmek istiyor musunuz? (y/n) "
  TRANSLATIONS["tr,watchtower_deleted"]="‚úÖ Watchtower ba≈üarƒ±yla silindi"
  TRANSLATIONS["tr,watchtower_kept"]="‚úÖ Watchtower korundu"
  TRANSLATIONS["tr,enter_tg_token"]="Telegram bot tokenini girin: "
  TRANSLATIONS["tr,enter_tg_chat_id"]="Telegram chat ID'sini girin: "
  TRANSLATIONS["tr,single_validator_mode"]="üîπ Tek validat√∂r modu se√ßildi"
  TRANSLATIONS["tr,multi_validator_mode"]="üîπ √áoklu validat√∂r modu se√ßildi"
  TRANSLATIONS["tr,enter_validator_keys"]="Validat√∂r √∂zel anahtarlarƒ±nƒ± girin (0x ile virg√ºlle ayrƒ±lmƒ±≈ü, en fazla 10): "
  TRANSLATIONS["tr,enter_validator_key"]="Validat√∂r √∂zel anahtar girin (0x ile): "
  TRANSLATIONS["tr,enter_seq_publisher_key"]="SEQ_PUBLISHER_PRIVATE_KEY girin (0x ile): "
  TRANSLATIONS["tr,enter_yn"]="L√ºtfen Y veya N girin: "
  TRANSLATIONS["tr,stopping_containers"]="Konteynerler durduruluyor..."
  TRANSLATIONS["tr,removing_node_data"]="Aztec node verileri kaldƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,stopping_watchtower"]="Watchtower durduruluyor..."
  TRANSLATIONS["tr,removing_watchtower_data"]="Watchtower verileri kaldƒ±rƒ±lƒ±yor..."
  # G√ºncelleme
  TRANSLATIONS["tr,update_title"]="Aztec d√ºƒü√ºm√º en son s√ºr√ºme g√ºncelleniyor"
  TRANSLATIONS["tr,update_folder_error"]="Hata: $HOME/aztec klas√∂r√º mevcut deƒüil"
  TRANSLATIONS["tr,update_stopping"]="Kapsayƒ±cƒ±lar durduruluyor..."
  TRANSLATIONS["tr,update_stop_error"]="Kapsayƒ±cƒ±lar durdurulurken hata olu≈ütu"
  TRANSLATIONS["tr,update_pulling"]="Son aztecprotocol/aztec imajƒ± √ßekiliyor..."
  TRANSLATIONS["tr,update_pull_error"]="ƒ∞maj √ßekilirken hata olu≈ütu"
  TRANSLATIONS["tr,update_starting"]="G√ºncellenmi≈ü d√ºƒü√ºm ba≈ülatƒ±lƒ±yor..."
  TRANSLATIONS["tr,update_start_error"]="Kapsayƒ±cƒ±lar ba≈ülatƒ±lƒ±rken hata olu≈ütu"
  TRANSLATIONS["tr,update_success"]="Aztec d√ºƒü√ºm√º ba≈üarƒ±yla en son s√ºr√ºme g√ºncellendi!"
  TRANSLATIONS["tr,tag_check"]="Etiket bulundu: %s, en son s√ºr√ºmle deƒüi≈ütiriliyor"
  # S√ºr√ºm d√º≈ü√ºrme
  TRANSLATIONS["tr,downgrade_title"]="Aztec d√ºƒü√ºm√º s√ºr√ºm d√º≈ü√ºr√ºl√ºyor"
  TRANSLATIONS["tr,downgrade_fetching"]="Mevcut s√ºr√ºm listesi alƒ±nƒ±yor..."
  TRANSLATIONS["tr,downgrade_fetch_error"]="S√ºr√ºm listesi alƒ±namadƒ±"
  TRANSLATIONS["tr,downgrade_available"]="Mevcut s√ºr√ºmler (numarayƒ± girin):"
  TRANSLATIONS["tr,downgrade_invalid_choice"]="Ge√ßersiz se√ßim, l√ºtfen tekrar deneyin"
  TRANSLATIONS["tr,downgrade_selected"]="Se√ßilen s√ºr√ºm:"
  TRANSLATIONS["tr,downgrade_folder_error"]="Hata: $HOME/aztec klas√∂r√º mevcut deƒüil"
  TRANSLATIONS["tr,downgrade_stopping"]="Kapsayƒ±cƒ±lar durduruluyor..."
  TRANSLATIONS["tr,downgrade_stop_error"]="Kapsayƒ±cƒ±lar durdurulurken hata olu≈ütu"
  TRANSLATIONS["tr,downgrade_pulling"]="aztecprotocol/aztec imajƒ± √ßekiliyor:"
  TRANSLATIONS["tr,downgrade_pull_error"]="ƒ∞maj √ßekilirken hata olu≈ütu"
  TRANSLATIONS["tr,downgrade_updating"]="Yapƒ±landƒ±rma g√ºncelleniyor..."
  TRANSLATIONS["tr,downgrade_update_error"]="docker-compose.yml g√ºncellenirken hata olu≈ütu"
  TRANSLATIONS["tr,downgrade_starting"]="D√ºƒü√ºm ≈üu s√ºr√ºmle ba≈ülatƒ±lƒ±yor"
  TRANSLATIONS["tr,downgrade_start_error"]="Kapsayƒ±cƒ±lar ba≈ülatƒ±lƒ±rken hata olu≈ütu"
  TRANSLATIONS["tr,downgrade_success"]="Aztec d√ºƒü√ºm√º ba≈üarƒ±yla ≈üu s√ºr√ºme d√º≈ü√ºr√ºld√º"
  #agent
  TRANSLATIONS["tr,agent_systemd_added"]="Aracƒ± eklendi (systemd ile her 37 saniyede bir √ßalƒ±≈üƒ±yor)"
  TRANSLATIONS["tr,agent_timer_status"]="Zamanlayƒ±cƒ± durumu:"
  TRANSLATIONS["tr,agent_timer_error"]="Systemd zamanlayƒ±cƒ± olu≈üturulurken hata olu≈ütu"
  TRANSLATIONS["tr,removing_systemd_agent"]="Aracƒ± ve systemd birimlerini kaldƒ±rƒ±lƒ±yor..."
  TRANSLATIONS["tr,agent_systemd_removed"]="Aracƒ± ba≈üarƒ±yla kaldƒ±rƒ±ldƒ±"
  #version module
  TRANSLATIONS["tr,update_changes"]="G√ºncellemedeki deƒüi≈üiklikler"
}

# === Configuration ===
CONTRACT_ADDRESS="0x29fa27e173f058d0f5f618f5abad2757747f673f"
FUNCTION_SIG="getPendingBlockNumber()"

REQUIRED_TOOLS=("cast" "curl" "crontab" "grep" "sed" "jq" "bc")
AGENT_SCRIPT_PATH="$HOME/aztec-monitor-agent"
LOG_FILE="$AGENT_SCRIPT_PATH/agent.log"

# === Dependency check ===
check_dependencies() {
  missing=()
  echo -e "\n${BLUE}$(t "checking_deps")${NC}\n"

  # –°–æ–∑–¥–∞–µ–º –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω
  declare -A tool_names=(
    ["cast"]="foundry"
    ["curl"]="curl"
    ["crontab"]="cron"
    ["grep"]="grep"
    ["sed"]="sed"
    ["jq"]="jq"
    ["bc"]="bc"
  )

  for tool in "${REQUIRED_TOOLS[@]}"; do
    if ! command -v "$tool" &>/dev/null; then
      # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
      display_name=${tool_names[$tool]:-$tool}
      echo -e "${RED}‚ùå $display_name $(t "not_installed")${NC}"
      missing+=("$tool")
    else
      display_name=${tool_names[$tool]:-$tool}
      echo -e "${GREEN}‚úÖ $display_name $(t "installed")${NC}"
    fi
  done

  if [ ${#missing[@]} -gt 0 ]; then
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–º–µ–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    missing_display=()
    for tool in "${missing[@]}"; do
      missing_display+=("${tool_names[$tool]:-$tool}")
    done

    echo -e "\n${YELLOW}$(t "missing_tools") ${missing_display[*]}${NC}"
    read -p "$(t "install_prompt") " confirm
    confirm=${confirm:-Y}

    if [[ "$confirm" =~ ^[Yy]$ ]]; then
      for tool in "${missing[@]}"; do
        case "$tool" in
          cast)
            echo -e "\n${CYAN}$(t "installing_foundry")${NC}"
            curl -L https://foundry.paradigm.xyz | bash

            if ! grep -q 'foundry/bin'  ~/.bash_profile; then
              echo 'export PATH="$PATH:$HOME/.foundry/bin"' >> ~/.bash_profile
            fi

            export PATH="$PATH:$HOME/.foundry/bin"
            foundryup
            ;;

          curl)
            echo -e "\n${CYAN}$(t "installing_curl")${NC}"
            sudo apt-get install -y curl || brew install curl
            ;;

          crontab)
            echo -e "\n${CYAN}$(t "installing_cron")${NC}"
            sudo apt-get install -y cron || brew install cronie
            ;;

          grep|sed)
            echo -e "\n${CYAN}$(t "installing_utils")${NC}"
            sudo apt-get install -y grep sed || brew install grep gnu-sed
            ;;

          jq)
            echo -e "\n${CYAN}$(t "installing_jq")${NC}"
            sudo apt-get install -y jq || brew install jq
            ;;

          bc)
            echo -e "\n${CYAN}$(t "installing_bc")${NC}"
            sudo apt-get install -y bc || brew install bc
            ;;
        esac
      done
    else
      echo -e "\n${RED}$(t "missing_required")${NC}"
      exit 1
    fi
  fi

  # Request RPC URL from user and create .env file
  if [ ! -f .env-aztec-agent ]; then
    echo -e "\n${BLUE}$(t "rpc_prompt")${NC}"
    read -p "> " RPC_URL
    echo "RPC_URL=$RPC_URL" > .env-aztec-agent
    echo -e "\n${GREEN}$(t "env_created")${NC}"
  else
    source .env-aztec-agent
    echo -e "\n${GREEN}$(t "env_exists") $RPC_URL${NC}"
  fi

  # === –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á VERSION –≤ ~/.env-aztec-agent ===
  # –ï—Å–ª–∏ –∫–ª—é—á–∞ VERSION –≤ .env-aztec-agent –Ω–µ—Ç ‚Äì –¥–æ–ø–∏—Å–∞—Ç—å –µ–≥–æ, –Ω–µ –∑–∞—Ç—Ä–æ–Ω—É–≤ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  INSTALLED_VERSION=$(grep '^VERSION=' ~/.env-aztec-agent | cut -d'=' -f2)

  if [ -z "$INSTALLED_VERSION" ]; then
    echo "VERSION=$SCRIPT_VERSION" >> ~/.env-aztec-agent
    INSTALLED_VERSION="$SCRIPT_VERSION"
  elif [ "$INSTALLED_VERSION" != "$SCRIPT_VERSION" ]; then
  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É VERSION –≤ .env-aztec-agent
    sed -i "s/^VERSION=.*/VERSION=$SCRIPT_VERSION/" ~/.env-aztec-agent
    INSTALLED_VERSION="$SCRIPT_VERSION"
  fi

  # === –°–∫–∞—á–∏–≤–∞–µ–º remote version_control.json –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é ===
  REMOTE_VC_URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/version_control.json"
  # –°–∫–∞—á–∏–≤–∞–µ–º –≤–µ—Å—å JSON, –æ—Ç–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ .[].VERSION, —Å–æ—Ä—Ç–∏—Ä—É–µ–º, –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π
  if remote_data=$(curl -fsSL "$REMOTE_VC_URL"); then
    REMOTE_LATEST_VERSION=$(echo "$remote_data" | jq -r '.[].VERSION' | sort -V | tail -n1)
  else
    REMOTE_LATEST_VERSION=""
  fi

  # === –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏, –µ—Å–ª–∏ –Ω–∞–¥–æ, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ ===
  echo -e "\n${CYAN}$(t "current_script_version") ${INSTALLED_VERSION}${NC}"
  if [ -n "$REMOTE_LATEST_VERSION" ] && [ "$REMOTE_LATEST_VERSION" != "$INSTALLED_VERSION" ]; then
    echo -e "${YELLOW}$(t "new_version_avialable") ${REMOTE_LATEST_VERSION}. $(t "new_version_update").${NC}"

    # === –í–´–í–û–î –°–ü–ò–°–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô ===
    echo -e "\n${BLUE}=== $(t "update_changes") ===${NC}"

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
    version_gt() {
      if [ "$1" = "$2" ]; then
        return 1
      fi
      local IFS=.
      local i ver1=($1) ver2=($2)
      for ((i=0; i<${#ver1[@]}; i++)); do
        if [[ -z ${ver2[i]} ]]; then
          ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]})); then
          return 0
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]})); then
          return 1
        fi
      done
      return 1
    }

    # –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ—Ä—Å–∏–π –ù–û–í–ï–ï —Ç–µ–∫—É—â–µ–π
    echo "$remote_data" | jq -c '.[]' | while read -r update; do
      version=$(echo "$update" | jq -r '.VERSION')
      date=$(echo "$update" | jq -r '.UPDATE_DATE')

      # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
      if version_gt "$version" "$INSTALLED_VERSION"; then
        echo -e "\n${GREEN}Version: $version (${date})${NC}"

        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        echo "$update" | jq -r '.CHANGES[]' | while read -r change; do
          echo -e "  ‚Ä¢ ${YELLOW}$change${NC}"
        done
      fi
    done

  elif [ -n "$REMOTE_LATEST_VERSION" ]; then
    echo -e "${GREEN}$(t "version_up_to_date")${NC}"
  fi
}

# === Spinner function ===
spinner() {
  local pid=$1
  local delay=0.1
  local spinstr='|/-\'

  while kill -0 "$pid" 2>/dev/null; do
    for i in $(seq 0 3); do
      printf "\r${CYAN}$(t "searching") %c${NC}" "${spinstr:i:1}"
      sleep $delay
    done
  done

  printf "\r                 \r"
}

# === Check container logs for block ===
check_aztec_container_logs() {
    cd $HOME
    source .env-aztec-agent

    # URL JSON —Ñ–∞–π–ª–∞ —Å –æ—à–∏–±–∫–∞–º–∏ –Ω–∞ GitHub
    ERROR_DEFINITIONS_URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/error_definitions.json"

    # –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    ERROR_DEFINITIONS_FILE="$HOME/aztec_error_definitions.json"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏ –æ—à–∏–±–æ–∫
    download_error_definitions() {
        if ! curl -s --fail "$ERROR_DEFINITIONS_URL" -o "$ERROR_DEFINITIONS_FILE"; then
            echo -e "${YELLOW}Warning: Failed to download error definitions from GitHub${NC}"
            return 1
        fi
        return 0
        return 0
    }

    # –ü–∞—Ä—Å–∏–º JSON –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤—ã
    parse_error_definitions() {
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º jq –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if command -v jq >/dev/null; then
            while IFS= read -r line; do
                pattern=$(jq -r '.pattern' <<< "$line")
                message=$(jq -r '.message' <<< "$line")
                solution=$(jq -r '.solution' <<< "$line")
                critical_errors["$pattern"]="$message"
                error_solutions["$pattern"]="$solution"
            done < <(jq -c '.[]' "$ERROR_DEFINITIONS_FILE")
        else
            # –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –±–µ–∑ jq (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å)
            while IFS= read -r line; do
                if [[ "$line" =~ \"pattern\":\"([^\"]*)\".*\"message\":\"([^\"]*)\".*\"solution\":\"([^\"]*)\" ]]; then
                    pattern="${BASH_REMATCH[1]}"
                    message="${BASH_REMATCH[2]}"
                    solution="${BASH_REMATCH[3]}"
                    critical_errors["$pattern"]="$message"
                    error_solutions["$pattern"]="$solution"
                fi
            done < <(grep -Eo '\{[^}]+\}' "$ERROR_DEFINITIONS_FILE")
        fi
    }

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤—ã –¥–ª—è –æ—à–∏–±–æ–∫ –∏ —Ä–µ—à–µ–Ω–∏–π
    declare -A critical_errors
    declare -A error_solutions

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
    if download_error_definitions; then
        parse_error_definitions
    else
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å
        critical_errors=(
            ["ERROR: cli Error: World state trees are out of sync, please delete your data directory and re-sync"]="World state trees are out of sync - node needs resync"
        )
        error_solutions=(
            ["ERROR: cli Error: World state trees are out of sync, please delete your data directory and re-sync"]="1. Stop the node container. Use option 13\n2. Delete data from the folder: sudo rm -rf /root/.aztec/testnet/data/\n3. Run the container. Use option 14"
        )
    fi

    echo -e "\n${BLUE}$(t "search_container")${NC}"
    container_id=$(docker ps --format "{{.ID}} {{.Names}}" \
                   | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

    if [ -z "$container_id" ]; then
        echo -e "\n${RED}$(t "container_not_found")${NC}"
        return
    fi
    echo -e "\n${GREEN}$(t "container_found") $container_id${NC}"

    echo -e "\n${BLUE}$(t "get_block")${NC}"
    block_hex=$(cast call "$CONTRACT_ADDRESS" "$FUNCTION_SIG" --rpc-url "$RPC_URL" 2>/dev/null)
    if [ -z "$block_hex" ]; then
        echo -e "\n${RED}$(t "block_error")${NC}"
        return
    fi
    block_number=$((16#${block_hex#0x}))
    echo -e "\n${GREEN}$(t "current_block") $block_number${NC}"

    # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    clean_logs=$(docker logs "$container_id" --tail 20000 2>&1 | sed -r 's/\x1B\[[0-9;]*[A-Za-z]//g')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    for error_pattern in "${!critical_errors[@]}"; do
        if echo "$clean_logs" | grep -q "$error_pattern"; then
            echo -e "\n${RED}$(t "critical_error_found")${NC}"
            echo -e "${YELLOW}$(t "error_prefix") ${critical_errors[$error_pattern]}${NC}"

            # –í—ã–≤–æ–¥–∏–º —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
            if [ -n "${error_solutions[$error_pattern]}" ]; then
                echo -e "\n${BLUE}$(t "solution_prefix")${NC}"
                echo -e "${error_solutions[$error_pattern]}"
            fi

            return
        fi
    done

    # –û—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    temp_file=$(mktemp)
    {
        echo "$clean_logs" | tac | grep -m1 'Sequencer sync check succeeded' >"$temp_file" 2>/dev/null
        if [ ! -s "$temp_file" ]; then
            echo "$clean_logs" | tac | grep -m1 'Downloaded L2 block' >"$temp_file" 2>/dev/null
        fi
    } &
    search_pid=$!
    spinner $search_pid
    wait $search_pid

    latest_log_line=$(<"$temp_file")
    rm -f "$temp_file"

    if [ -z "$latest_log_line" ]; then
        echo -e "\n${RED}$(t "log_block_not_found")${NC}"
        return
    fi

    if grep -q 'Sequencer sync check succeeded' <<<"$latest_log_line"; then
        log_block_number=$(echo "$latest_log_line" \
            | grep -o '"worldState":{"number":[0-9]\+' \
            | grep -o '[0-9]\+$')
    else
        log_block_number=$(echo "$latest_log_line" \
            | grep -o '"blockNumber":[0-9]\+' \
            | head -n1 | cut -d':' -f2)
    fi

    if [ -z "$log_block_number" ]; then
        echo -e "\n${RED}$(t "log_block_extract_failed")${NC}"
        echo "$latest_log_line"
        return
    fi
    echo -e "\n${BLUE}$(t "log_block_number") $log_block_number${NC}"

    if [ "$log_block_number" -eq "$block_number" ]; then
        echo -e "\n${GREEN}$(t "node_ok")${NC}"
    else
        printf "\n${YELLOW}$(t "log_behind_details")${NC}\n" \
               "$log_block_number" "$block_number"
        echo -e "\n${BLUE}$(t "log_line_example")${NC}"
        echo "$latest_log_line"
    fi
}


# === View Aztec container logs ===
view_container_logs() {

  echo -e "\n${BLUE}$(t "search_container")${NC}"
  container_id=$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

  if [ -z "$container_id" ]; then
    echo -e "\n${RED}$(t "container_not_found")${NC}"
    return
  fi

  echo -e "\n${GREEN}$(t "container_found") $container_id${NC}"
  echo -e "\n${BLUE}$(t "press_ctrlc")${NC}"
  echo -e "\n${BLUE}$(t "logs_starting")${NC}"

  sleep 5

  # –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ SIGINT (Ctrl+C) –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
  trap "echo -e '\n${YELLOW}$(t "return_main_menu")${NC}'; trap - SIGINT; return" SIGINT

  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –≤ —Ä–µ–∂–∏–º–µ "follow"
  docker logs --tail 500 -f "$container_id"

  # –£–±–∏—Ä–∞–µ–º —Ä–∞–Ω–µ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π trap, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –Ω–æ—Ä–º–∞–ª—å–Ω–æ
  trap - SIGINT
}


# === Find rollupAddress in logs ===
find_rollup_address() {
  echo -e "\n${BLUE}$(t "search_rollup")${NC}"

  container_id=$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

  if [ -z "$container_id" ]; then
    echo -e "\n${RED}$(t "container_not_found")${NC}"
    return 1
  fi

  tmp_log=$(mktemp)
  # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ —Å –æ—á–∏—Å—Ç–∫–æ–π ANSI-–∫–æ–¥–æ–≤
  docker logs "$container_id" 2>&1 | sed -r "s/\x1B\[[0-9;]*[mK]//g" > "$tmp_log" &

  spinner $!

  # –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–∏—Å–∫ rollupAddress
  rollup_address=$(grep -oP -m1 '"rollupAddress"\s*:\s*"\K0x[a-fA-F0-9]{40}' "$tmp_log" | tail -n 1)

  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
  if [ -z "$rollup_address" ]; then
    rollup_address=$(grep -oE -m1 'rollupAddress[^0-9a-fA-F]*0x[a-fA-F0-9]{40}' "$tmp_log" | grep -oE '0x[a-fA-F0-9]{40}' | tail -n 1)
  fi

  rm "$tmp_log"

  if [ -n "$rollup_address" ]; then
    echo -e "\n${GREEN}$(t "rollup_found") $rollup_address${NC}"
    return 0
  else
    echo -e "\n${RED}$(t "rollup_not_found")${NC}"
    return 1
  fi
}

# === Find PeerID in logs ===
find_peer_id() {
  echo -e "\n${BLUE}$(t "search_peer")${NC}"

  container_id=$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

  if [ -z "$container_id" ]; then
    echo -e "\n${RED}$(t "container_not_found")${NC}"
    return 1
  fi

  # –§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ peerId
  _find_peer_id_worker() {
    sudo docker logs "$container_id" 2>&1 | \
      grep -i "peerId" | \
      grep -o '"peerId":"[^"]*"' | \
      cut -d'"' -f4 | \
      head -n 1 > /tmp/peer_id.tmp
  }

  _find_peer_id_worker &
  worker_pid=$!
  spinner $worker_pid
  wait $worker_pid

  peer_id=$(< /tmp/peer_id.tmp)
  rm -f /tmp/peer_id.tmp

  if [ -z "$peer_id" ]; then
    echo -e "${RED}$(t "peer_not_found")${NC}"
    return 1
  else
    echo -e "\n${GREEN}$(t "peer_found")${NC}: $peer_id"
    return 0
  fi
}

# === Find governanceProposerPayload ===
find_governance_proposer_payload() {
  echo -e "\n${BLUE}$(t "search_gov")${NC}"

  # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  container_id=$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

  if [ -z "$container_id" ]; then
    echo -e "\n${RED}$(t "container_not_found")${NC}"
    return 1
  fi

  echo -e "\n${CYAN}$(t "gov_found")${NC}"

  # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ–Ω–µ
  _find_payloads_worker() {
    sudo docker logs "$container_id" 2>&1 | \
      grep -i '"governanceProposerPayload"' | \
      grep -o '"governanceProposerPayload":"0x[a-fA-F0-9]\{40\}"' | \
      cut -d'"' -f4 | \
      tr '[:upper:]' '[:lower:]' | \
      awk '!seen[$0]++ {print}' | \
      tail -n 10 > /tmp/gov_payloads.tmp
  }

  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –≤ —Ñ–æ–Ω–µ –∏ —Å–ø–∏–Ω–Ω–µ—Ä
  _find_payloads_worker &
  worker_pid=$!
  spinner $worker_pid
  wait $worker_pid

  if [ ! -s /tmp/gov_payloads.tmp ]; then
    echo -e "\n${RED}$(t "gov_not_found")${NC}"
    rm -f /tmp/gov_payloads.tmp
    return 1
  fi

  mapfile -t payloads_array < /tmp/gov_payloads.tmp
  rm -f /tmp/gov_payloads.tmp

  echo -e "\n${GREEN}$(t "gov_found_results")${NC}"
  for p in "${payloads_array[@]}"; do
    echo "‚Ä¢ $p"
  done

  if [ "${#payloads_array[@]}" -gt 1 ]; then
    echo -e "\n${RED}$(t "gov_changed")${NC}"
    for ((i = 1; i < ${#payloads_array[@]}; i++)); do
      echo -e "${YELLOW}$(t "gov_was") ${payloads_array[i-1]} ‚Üí $(t "gov_now") ${payloads_array[i]}${NC}"
    done
  else
    echo -e "\n${GREEN}$(t "gov_no_changes")${NC}"
  fi

  return 0
}

# === Create agent and systemd task ===
create_systemd_agent() {
  local env_file
  env_file=$(_ensure_env_file)
  source "$env_file"

  # Function to validate Telegram bot token
  validate_telegram_token() {
    local token=$1
    if [[ ! "$token" =~ ^[0-9]+:[a-zA-Z0-9_-]+$ ]]; then
      return 1
    fi
    # Test token by making API call
    local response=$(curl -s "https://api.telegram.org/bot${token}/getMe")
    if [[ "$response" == *"ok\":true"* ]]; then
      return 0
    else
      return 1
    fi
  }

  # Function to validate Telegram chat ID (updated version)
  validate_telegram_chat() {
    local token=$1
    local chat_id=$2
    # Test chat ID by trying to send a test message
    local response=$(curl -s -X POST "https://api.telegram.org/bot${token}/sendMessage" \
      -d chat_id="${chat_id}" \
      -d text="$(t "chatid_linked")" \
      -d parse_mode="Markdown")

    if [[ "$response" == *"ok\":true"* ]]; then
      return 0
    else
      return 1
    fi
  }

  # === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ TELEGRAM_BOT_TOKEN ===
  if [ -z "$TELEGRAM_BOT_TOKEN" ]; then
    while true; do
      echo -e "\n${BLUE}$(t "token_prompt")${NC}"
      read -p "> " TELEGRAM_BOT_TOKEN

      if validate_telegram_token "$TELEGRAM_BOT_TOKEN"; then
        echo "TELEGRAM_BOT_TOKEN=\"$TELEGRAM_BOT_TOKEN\"" >> "$env_file"
        break
      else
        echo -e "${RED}$(t "invalid_token")${NC}"
        echo -e "${YELLOW}$(t "token_format")${NC}"
      fi
    done
  fi

  # === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ TELEGRAM_CHAT_ID ===
  if [ -z "$TELEGRAM_CHAT_ID" ]; then
    while true; do
      echo -e "\n${BLUE}$(t "chatid_prompt")${NC}"
      read -p "> " TELEGRAM_CHAT_ID

      if [[ "$TELEGRAM_CHAT_ID" =~ ^-?[0-9]+$ ]]; then
        if validate_telegram_chat "$TELEGRAM_BOT_TOKEN" "$TELEGRAM_CHAT_ID"; then
          echo "TELEGRAM_CHAT_ID=\"$TELEGRAM_CHAT_ID\"" >> "$env_file"
          break
        else
          echo -e "${RED}$(t "invalid_chatid")${NC}"
        fi
      else
        echo -e "${RED}$(t "chatid_number")${NC}"
      fi
    done
  fi

  # === –ó–∞–ø—Ä–æ—Å –æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö ===
  if [ -z "$NOTIFICATION_TYPE" ]; then
    echo -e "\n${BLUE}$(t "notifications_prompt")${NC}"
    echo -e "$(t "notifications_option1")"
    echo -e "$(t "notifications_option2")"
    echo -e "\n${YELLOW}$(t "notifications_debug_warning")${NC}"
    while true; do
      read -p "$(t "choose_option_prompt") (1/2): " NOTIFICATION_TYPE
      if [[ "$NOTIFICATION_TYPE" =~ ^[12]$ ]]; then
        if ! grep -q "NOTIFICATION_TYPE" "$env_file"; then
          echo "NOTIFICATION_TYPE=\"$NOTIFICATION_TYPE\"" >> "$env_file"
        else
          sed -i "s/^NOTIFICATION_TYPE=.*/NOTIFICATION_TYPE=\"$NOTIFICATION_TYPE\"/" "$env_file"
        fi
        break
      else
        echo -e "${RED}$(t "notifications_input_error")${NC}"
      fi
    done
  fi

  # === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ VALIDATORS (–µ—Å–ª–∏ NOTIFICATION_TYPE == 2) ===
  if [ "$NOTIFICATION_TYPE" -eq 2 ] && [ ! -f "/root/.env-aztec-agent" ] || ! grep -q "^VALIDATORS=" "/root/.env-aztec-agent"; then
    echo -e "\n${BLUE}$(t "validators_prompt")${NC}"
    echo -e "${YELLOW}$(t "validators_format")${NC}"
    while true; do
      read -p "> " VALIDATORS
      if [[ -n "$VALIDATORS" ]]; then
        if [ -f "/root/.env-aztec-agent" ]; then
          if grep -q "^VALIDATORS=" "/root/.env-aztec-agent"; then
            sed -i "s/^VALIDATORS=.*/VALIDATORS=\"$VALIDATORS\"/" "/root/.env-aztec-agent"
          else
            echo "VALIDATORS=\"$VALIDATORS\"" >> "/root/.env-aztec-agent"
          fi
        else
          echo "VALIDATORS=\"$VALIDATORS\"" > "/root/.env-aztec-agent"
        fi
        break
      else
        echo -e "${RED}$(t "validators_empty")${NC}"
      fi
    done
  fi

  mkdir -p "$AGENT_SCRIPT_PATH"

  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –∞–≥–µ–Ω—Ç–∞
  cat > "$AGENT_SCRIPT_PATH/agent.sh" <<EOF
#!/bin/bash
export PATH="\$PATH:/root/.foundry/bin"

source \$HOME/.env-aztec-agent
CONTRACT_ADDRESS="$CONTRACT_ADDRESS"
FUNCTION_SIG="$FUNCTION_SIG"
TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN"
TELEGRAM_CHAT_ID="$TELEGRAM_CHAT_ID"
LOG_FILE="$LOG_FILE"
LANG="$LANG"

# URL JSON —Ñ–∞–π–ª–∞ —Å –æ—à–∏–±–∫–∞–º–∏ –Ω–∞ GitHub
ERROR_DEFINITIONS_URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/error_definitions.json"
ERROR_DEFINITIONS_FILE="\$HOME/aztec_error_definitions.json"

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
t() {
  local key=\$1
  local value1=\$2
  local value2=\$3

  case \$key in
    "log_cleaned") echo "$(t "agent_log_cleaned")" ;;
    "container_not_found") echo "$(t "agent_container_not_found")" ;;
    "block_fetch_error") echo "$(t "agent_block_fetch_error")" ;;
    "no_block_in_logs") echo "$(t "agent_no_block_in_logs")" ;;
    "failed_extract_block") echo "$(t "agent_failed_extract_block")" ;;
    "node_behind") printf "$(t "agent_node_behind")" "\$value1" ;;
    "agent_started") echo "$(t "agent_started")" ;;
    "log_size_warning") echo "$(t "agent_log_size_warning")" ;;
    "server_info") printf "$(t "agent_server_info")" "\$value1" ;;
    "file_info") printf "$(t "agent_file_info")" "\$value1" ;;
    "size_info") printf "$(t "agent_size_info")" "\$value1" ;;
    "rpc_info") printf "$(t "agent_rpc_info")" "\$value1" ;;
    "error_info") printf "$(t "agent_error_info")" "\$value1" ;;
    "block_info") printf "$(t "agent_block_info")" "\$value1" ;;
    "log_block_info") printf "$(t "agent_log_block_info")" "\$value1" ;;
    "time_info") printf "$(t "agent_time_info")" "\$value1" ;;
    "line_info") printf "$(t "agent_line_info")" "\$value1" ;;
    "notifications_info") echo "$(t "agent_notifications_info")" ;;
    "node_synced") printf "$(t "agent_node_synced")" "\$value1" ;;
    "critical_error_found") echo "$(t "critical_error_found")" ;;
    "error_prefix") echo "$(t "error_prefix")" ;;
    "solution_prefix") echo "$(t "solution_prefix")" ;;
    "notifications_full_info") echo "$(t "agent_notifications_full_info")" ;;
    "committee_selected") echo "$(t "committee_selected")" ;;
    "epoch_info") printf "$(t "epoch_info")" "\$value1" ;;
    "block_built") printf "$(t "block_built")" "\$value1" ;;
    "slot_info") printf "$(t "slot_info")" "\$value1" ;;
    "found_validators") printf "$(t "found_validators")" "\$value1" ;;
    "validators_prompt") echo "$(t "validators_prompt")" ;;
    "validators_format") echo "$(t "validators_format")" ;;
    "validators_empty") echo "$(t "validators_empty")" ;;
    "attestation_status") echo "$(t "attestation_status")" ;;
    *) echo "\$key" ;;
  esac
}

# === –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–≥–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç ===
if [ ! -f "\$LOG_FILE" ]; then
  touch "\$LOG_FILE" 2>/dev/null || {
    echo "Error: Could not create log file \$LOG_FILE"
    exit 1
  }
fi

if [ ! -w "\$LOG_FILE" ]; then
  echo "Error: No write permission for \$LOG_FILE"
  exit 1
fi

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –∏ –æ—á–∏—Å—Ç–∫–∞, –µ—Å–ª–∏ –±–æ–ª—å—à–µ 1‚Äâ–ú–ë ===
MAX_SIZE=1048576
current_size=\$(stat -c%s "\$LOG_FILE")

if [ "\$current_size" -gt "\$MAX_SIZE" ]; then
  temp_file=\$(mktemp)
  awk '/INITIALIZED/ {print; exit} {print}' "\$LOG_FILE" > "\$temp_file"
  mv "\$temp_file" "\$LOG_FILE"
  chmod 644 "\$LOG_FILE"

  {
    echo ""
    echo "\$(t "log_cleaned")"
    echo "Cleanup completed: \$(date '+%Y-%m-%d %H:%M:%S')"
    echo ""
  } >> "\$LOG_FILE"

  ip=\$(curl -s https://api.ipify.org || echo "unknown-ip")
  current_time=\$(date '+%Y-%m-%d %H:%M:%S')
  message="\$(t "log_size_warning")%0A\$(t "server_info" "\$ip")%0A\$(t "file_info" "\$LOG_FILE")%0A\$(t "size_info" "\$current_size")%0A\$(t "time_info" "\$current_time")"

  curl -s -X POST "https://api.telegram.org/bot\$TELEGRAM_BOT_TOKEN/sendMessage" \\
    -d chat_id="\$TELEGRAM_CHAT_ID" \\
    -d text="\$message" \\
    -d parse_mode="Markdown" >/dev/null
else
  {
    echo "="
    echo "Log size check"
    echo "Current size: \$current_size bytes (within limit)."
    echo "Check timestamp: \$(date '+%Y-%m-%d %H:%M:%S')"
    echo "="
  } >> "\$LOG_FILE"
fi

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª ===
log() {
  echo "[\$(date '+%Y-%m-%d %H:%M:%S')] \$1" >> "\$LOG_FILE"
}

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram ===
send_telegram_message() {
  local message="\$1"
  curl -s -X POST "https://api.telegram.org/bot\$TELEGRAM_BOT_TOKEN/sendMessage" \\
    -d chat_id="\$TELEGRAM_CHAT_ID" \\
    -d text="\$message" \\
    -d parse_mode="Markdown" >/dev/null
}

# === –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π IP –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ===
get_ip_address() {
  curl -s https://api.ipify.org || echo "unknown-ip"
}
ip=\$(get_ip_address)

# === –ü–µ—Ä–µ–≤–æ–¥–∏–º hex -> decimal ===
hex_to_dec() {
  local hex=\$1
  hex=\${hex#0x}
  hex=\$(echo \$hex | sed 's/^0*//')
  [ -z "\$hex" ] && echo 0 && return
  echo \$((16#\$hex))
}

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö ===
check_critical_errors() {
  local container_id=\$1
  local clean_logs=\$(docker logs "\$container_id" --tail 10000 2>&1 | sed -r 's/\x1B\[[0-9;]*[A-Za-z]//g')

  # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏ –æ—à–∏–±–æ–∫
  if ! curl -s --fail "\$ERROR_DEFINITIONS_URL" -o "\$ERROR_DEFINITIONS_FILE"; then
    log "Failed to download error definitions from GitHub"
    return
  fi

  # –ü–∞—Ä—Å–∏–º JSON —Å –æ—à–∏–±–∫–∞–º–∏
  errors_count=\$(jq '. | length' "\$ERROR_DEFINITIONS_FILE")
  for ((i=0; i<\$errors_count; i++)); do
    pattern=\$(jq -r ".[\$i].pattern" "\$ERROR_DEFINITIONS_FILE")
    message=\$(jq -r ".[\$i].message" "\$ERROR_DEFINITIONS_FILE")
    solution=\$(jq -r ".[\$i].solution" "\$ERROR_DEFINITIONS_FILE")

    if echo "\$clean_logs" | grep -q "\$pattern"; then
      log "Critical error detected: \$pattern"
      current_time=\$(date '+%Y-%m-%d %H:%M:%S')
      full_message="\$(t "critical_error_found")%0A\$(t "server_info" "\$ip")%0A\$(t "error_prefix") \$message%0A\$(t "solution_prefix")%0A\$solution%0A\$(t "time_info" "\$current_time")"
      send_telegram_message "\$full_message"
      exit 1
    fi
  done
}

# === –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫ –≤ –ª–æ–≥–∞—Ö ===
find_last_log_line() {
  local container_id=\$1
  local temp_file=\$(mktemp)

  # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –æ–±—ä–µ–º—É –∏ —Å—Ä–∞–∑—É —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  docker logs "\$container_id" --tail 10000 2>&1 | \
    sed -r 's/\x1B\[[0-9;]*[A-Za-z]//g' | \
    grep -E 'Sequencer sync check succeeded|Downloaded L2 block' | \
    tail -100 > "\$temp_file"

  # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º Sequencer sync check succeeded
  local line=\$(tac "\$temp_file" | grep -m1 'Sequencer sync check succeeded')

  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –∏—â–µ–º Downloaded L2 block
  if [ -z "\$line" ]; then
    line=\$(tac "\$temp_file" | grep -m1 'Downloaded L2 block')
  fi

  rm -f "\$temp_file"
  echo "\$line"
}

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π DEBUG ===
ensure_debug_variable() {
  local env_file="/root/.env-aztec-agent"
  if [ ! -f "\$env_file" ]; then
    return
  fi

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è DEBUG
  if ! grep -q "^DEBUG=" "\$env_file"; then
    # –î–æ–±–∞–≤–ª—è–µ–º DEBUG –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
    echo "DEBUG=false" >> "\$env_file"
    log "Added DEBUG variable to \$env_file"
  fi
}

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
ensure_debug_variable

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ ===
is_debug_enabled() {
  if [ ! -f "/root/.env-aztec-agent" ]; then
    return 1
  fi

  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DEBUG
  debug_value=\$(grep "^DEBUG=" "/root/.env-aztec-agent" | cut -d'=' -f2 | tr -d '"' | tr -d "'" | tr '[:upper:]' '[:lower:]')

  if [ "\$debug_value" = "true" ] || [ "\$debug_value" = "1" ] || [ "\$debug_value" = "yes" ]; then
    return 0
  else
    return 1
  fi
}

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
debug_log() {
  if is_debug_enabled; then
    log "DEBUG: \$1"
  fi
}

# === –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∏—Ç–µ—Ç–∞ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ ===
check_committee() {
  debug_log "check_committee started. NOTIFICATION_TYPE=\$NOTIFICATION_TYPE"

  if [ "\$NOTIFICATION_TYPE" -ne 2 ]; then
    debug_log "NOTIFICATION_TYPE != 2, skipping committee check"
    return
  fi

  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤
  if [ ! -f "/root/.env-aztec-agent" ]; then
    log "Validator file /root/.env-aztec-agent not found"
    return
  fi

  source /root/.env-aztec-agent
  if [ -z "\$VALIDATORS" ]; then
    log "No validators defined in VALIDATORS variable"
    return
  fi

  IFS=',' read -ra VALIDATOR_ARRAY <<< "\$VALIDATORS"
  debug_log "Validators loaded: \${VALIDATOR_ARRAY[*]}"

  container_id=\$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print \$1}')
  if [ -z "\$container_id" ]; then
    debug_log "No aztec container found"
    return
  fi
  debug_log "Container ID: \$container_id"

  # --- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏—Ç–µ—Ç–µ ---
  committee_line=\$(docker logs "\$container_id" --tail 10000 2>&1 | grep -a "Computing stats for slot" | tail -n 1)
  [ -z "\$committee_line" ] && { debug_log "No committee line found in logs"; return; }
  debug_log "Committee line found: \$committee_line"

  json_part=\$(echo "\$committee_line" | sed -n 's/.*\({.*}\).*/\1/p')
  [ -z "\$json_part" ] && { debug_log "No JSON part extracted"; return; }
  debug_log "JSON part: \$json_part"

  epoch=\$(echo "\$json_part" | jq -r '.epoch')
  slot=\$(echo "\$json_part" | jq -r '.slot')
  committee=\$(echo "\$json_part" | jq -r '.committee[]')

  if [ -z "\$epoch" ] || [ -z "\$slot" ] || [ -z "\$committee" ]; then
    debug_log "Missing epoch/slot/committee data. epoch=\$epoch, slot=\$slot, committee=\$committee"
    return
  fi
  debug_log "Epoch=\$epoch, Slot=\$slot, Committee=\$committee"

  found_validators=()
  committee_validators=()
  for validator in "\${VALIDATOR_ARRAY[@]}"; do
    validator_lower=\$(echo "\$validator" | tr '[:upper:]' '[:lower:]')
    if echo "\$committee" | grep -qi "\$validator_lower"; then
      validator_link="[\$validator](https://dashtec.xyz/validators/\$validator)"
      found_validators+=("\$validator_link")
      committee_validators+=("\$validator_lower")
      debug_log "Validator \$validator found in committee"
    fi
  done

  # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –≤ –∫–æ–º–∏—Ç–µ—Ç–µ - –≤—ã—Ö–æ–¥–∏–º
  if [ \${#found_validators[@]} -eq 0 ]; then
    debug_log "No validators found in committee"
    return
  fi
  debug_log "Found validators: \${found_validators[*]}"

  # === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ –≤ –∫–æ–º–∏—Ç–µ—Ç (—Ä–∞–∑ –∑–∞ —ç–ø–æ—Ö—É) ===
  last_epoch_file="$AGENT_SCRIPT_PATH/aztec_last_committee_epoch"
  if [ ! -f "\$last_epoch_file" ] || ! grep -q "\$epoch" "\$last_epoch_file"; then
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    validator_list=\$(IFS=\$'\n' ; echo "\${found_validators[*]}")
    committee_message="\$(t "committee_selected") (\$(t "epoch_info" "\$epoch"))!%0A"
    committee_message+="%0A\$(t "found_validators" "\$validator_list")%0A"
    committee_message+="%0A\$(t "server_info" "\$ip")%0A"
    committee_message+="\$(t "time_info" "\$current_time")"

    debug_log "Sending committee message: \$committee_message"
    send_telegram_message "\$committee_message"
    echo "\$epoch" > "\$last_epoch_file"
    log "Committee selection notification sent for epoch \$epoch: found validators \${found_validators[*]}"

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª —Å–ª–æ—Ç–æ–≤ –ø—Ä–∏ —Å–º–µ–Ω–µ —ç–ø–æ—Ö–∏
    last_slot_file="$AGENT_SCRIPT_PATH/aztec_last_committee_slot"
    > "\$last_slot_file"
    debug_log "Cleared slot file for new epoch \$epoch"
  else
    debug_log "Already notified for epoch \$epoch"
  fi

  # === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–∞—Ö –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–π (–∫–∞–∂–¥—ã–π —Å–ª–æ—Ç) ===
  last_slot_file="$AGENT_SCRIPT_PATH/aztec_last_committee_slot"
  last_slot_key="\${epoch}_\${slot}"

  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ—Ç–∞
  if [ -f "\$last_slot_file" ] && grep -q "\$last_slot_key" "\$last_slot_file"; then
    debug_log "Already processed slot \$last_slot_key"
    return
  fi

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–∫—É—â–µ–π —ç–ø–æ—Ö–µ (–æ—á–∏—â–µ–Ω–Ω–æ–π –ø—Ä–∏ —Å–º–µ–Ω–µ —ç–ø–æ—Ö–∏)
  current_epoch=\$(cat "\$last_epoch_file" 2>/dev/null)
  if [ -n "\$current_epoch" ] && [ "\$epoch" != "\$current_epoch" ]; then
    debug_log "Slot \$slot belongs to epoch \$epoch, but current epoch is \$current_epoch - skipping"
    return
  fi

  echo "\$last_slot_key" >> "\$last_slot_file"
  debug_log "Added slot to file: \$last_slot_key"

  activity_line=\$(docker logs "\$container_id" --tail 10000 2>&1 | grep -a "Updating L2 slot \$slot observed activity" | tail -n 1)
  attestation_info=""

  if [ -n "\$activity_line" ]; then
    debug_log "Activity line found: \$activity_line"
    activity_json=\$(echo "\$activity_line" | sed 's/.*observed activity //')
    if [ -n "\$activity_json" ]; then
      attestation_info="%0A"
      for validator_lower in "\${committee_validators[@]}"; do
        status=\$(echo "\$activity_json" | jq -r ".\"\$validator_lower\"")
        if [ "\$status" != "null" ] && [ -n "\$status" ]; then
          case "\$status" in
            attestation-sent)   status_text="‚úÖ attestation" ;;
            attestation-missed) status_text="‚ùå attestation" ;;
            block-mined)        status_text="‚õèÔ∏è Block mined" ;;
            block-proposed)     status_text="üì§ Block proposed" ;;
            block-missed)       status_text="‚ö†Ô∏è Block missed" ;;
            *)                  status_text="\$status" ;;
          esac
          validator_link="[\$validator_lower](https://dashtec.xyz/validators/\$validator_lower)"
          attestation_info+="\$validator_link ‚Üí \$status_text%0A"
          debug_log "Validator \$validator_lower status: \$status"
        fi
      done
    fi
  else
    debug_log "No activity line found for slot \$slot"
  fi

  if [ -n "\$attestation_info" ] && [ "\$attestation_info" != "%0A" ]; then
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    attestation_message="\$(t "attestation_status")%0A\$(t "epoch_info" "\$epoch"), \$(t "slot_info" "\$slot")%0A"
    attestation_message+="\$attestation_info"
    attestation_message+="%0A\$(t "server_info" "\$ip")%0A"
    attestation_message+="\$(t "time_info" "\$current_time")"

    debug_log "Sending attestation message: \$attestation_message"
    send_telegram_message "\$attestation_message"
    log "Attestation status notification sent for epoch \$epoch, slot \$slot"
  else
    debug_log "No attestation info to send"
  fi
}

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤ ===
check_blocks() {
  debug_log "check_blocks started at \$(date)"

  container_id=\$(docker ps --format "{{.ID}} {{.Names}}" | grep aztec | grep -v watchtower | head -n 1 | awk '{print \$1}')
  if [ -z "\$container_id" ]; then
    log "Container 'aztec' not found."
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    message="\$(t "container_not_found")%0A\$(t "server_info" "\$ip")%0A\$(t "time_info" "\$current_time")"
    debug_log "Sending container not found message"
    send_telegram_message "\$message"
    exit 1
  fi
  debug_log "Container found: \$container_id"

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
  check_critical_errors "\$container_id"

  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ –∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
  debug_log "Getting block from contract: \$CONTRACT_ADDRESS"
  block_hex=\$(cast call "\$CONTRACT_ADDRESS" "\$FUNCTION_SIG" --rpc-url "\$RPC_URL" 2>&1)
  if [[ "\$block_hex" == *"Error"* || -z "\$block_hex" ]]; then
    log "Block Fetch Error. Check RPC or cast: \$block_hex"
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    message="\$(t "block_fetch_error")%0A\$(t "server_info" "\$ip")%0A\$(t "rpc_info" "\$RPC_URL")%0A\$(t "error_info" "\$block_hex")%0A\$(t "time_info" "\$current_time")"
    debug_log "Sending block fetch error message"
    send_telegram_message "\$message"
    exit 1
  fi

  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º hex-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–µ—Å—è—Ç–∏—á–Ω—ã–π
  block_number=\$(hex_to_dec "\$block_hex")
  log "Contract block: \$block_number"

  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ –ª–æ–≥–æ–≤
  latest_log_line=\$(find_last_log_line "\$container_id")
  debug_log "Latest log line: \$latest_log_line"

  if [ -z "\$latest_log_line" ]; then
    log "No suitable block line found in logs"
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    message="\$(t "no_block_in_logs")%0A\$(t "server_info" "\$ip")%0A\$(t "block_info" "\$block_number")%0A\$(t "time_info" "\$current_time")"
    debug_log "Sending no block in logs message"
    send_telegram_message "\$message"
    exit 1
  fi

  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  if grep -q 'Sequencer sync check succeeded' <<<"\$latest_log_line"; then
    # —Ñ–æ—Ä–º–∞—Ç: ..."worldState":{"number":18254,...
    log_block_number=\$(echo "\$latest_log_line" | grep -o '"worldState":{"number":[0-9]\+' | grep -o '[0-9]\+$')
    debug_log "Extracted from worldState: \$log_block_number"
  else
    # —Ñ–æ—Ä–º–∞—Ç: ..."blockNumber":18254,...
    log_block_number=\$(echo "\$latest_log_line" | grep -o '"blockNumber":[0-9]\+' | head -n1 | cut -d':' -f2)
    debug_log "Extracted from blockNumber: \$log_block_number"
  fi

  if [ -z "\$log_block_number" ]; then
    log "Failed to extract blockNumber from line: \$latest_log_line"
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')
    message="\$(t "failed_extract_block")%0A\$(t "server_info" "\$ip")%0A\$(t "line_info" "\$latest_log_line")%0A\$(t "time_info" "\$current_time")"
    debug_log "Sending failed extract block message"
    send_telegram_message "\$message"
    exit 1
  fi

  log "Latest log block: \$log_block_number"

  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –±–ª–æ–∫–∏
  if [ "\$log_block_number" -eq "\$block_number" ]; then
    status="\$(t "node_synced" "\$block_number")"
  else
    blocks_diff=\$((block_number - log_block_number))
    status="\$(t "node_behind" "\$blocks_diff")"
    if [ "\$blocks_diff" -gt 3 ]; then
      current_time=\$(date '+%Y-%m-%d %H:%M:%S')
      message="\$(t "node_behind" "\$blocks_diff")%0A\$(t "server_info" "\$ip")%0A\$(t "block_info" "\$block_number")%0A\$(t "log_block_info" "\$log_block_number")%0A\$(t "time_info" "\$current_time")"
      debug_log "Sending node behind message, diff=\$blocks_diff"
      send_telegram_message "\$message"
    fi
  fi

  log "Status: \$status (logs: \$log_block_number, contract: \$block_number)"

  if [ ! -f "\$LOG_FILE.initialized" ]; then
    current_time=\$(date '+%Y-%m-%d %H:%M:%S')

    if [ "\$NOTIFICATION_TYPE" -eq 2 ]; then
      # –ü–æ–ª–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–≤—Å–µ –≤–∫–ª—é—á–µ–Ω–æ)
      message="\$(t "agent_started")%0A\$(t "server_info" "\$ip")%0A\$status%0A\$(t "notifications_full_info")%0A\$(t "time_info" "\$current_time")"
    else
      # –¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      message="\$(t "agent_started")%0A\$(t "server_info" "\$ip")%0A\$status%0A\$(t "notifications_info")%0A\$(t "time_info" "\$current_time")"
    fi

    debug_log "Sending initialization message"
    send_telegram_message "\$message"
    touch "\$LOG_FILE.initialized"
    echo "v.\$VERSION" >> "\$LOG_FILE"
    echo "INITIALIZED" >> "\$LOG_FILE"
  fi

   # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ NOTIFICATION_TYPE == 2)
  if [ "\$NOTIFICATION_TYPE" -eq 2 ]; then
    debug_log "Starting committee check"
    check_committee
  else
    debug_log "Skipping committee check (NOTIFICATION_TYPE=\$NOTIFICATION_TYPE)"
  fi

  debug_log "check_blocks completed at \$(date)"
}

check_blocks
EOF

  chmod +x "$AGENT_SCRIPT_PATH/agent.sh"

  # –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
  cat > /etc/systemd/system/aztec-agent.service <<EOF
[Unit]
Description=Aztec Monitoring Agent
After=network.target

[Service]
Type=oneshot
EnvironmentFile=$env_file
ExecStart=$AGENT_SCRIPT_PATH/agent.sh
User=root
WorkingDirectory=$AGENT_SCRIPT_PATH

[Install]
WantedBy=multi-user.target
EOF

  # –°–æ–∑–¥–∞–µ–º systemd timer
  cat > /etc/systemd/system/aztec-agent.timer <<EOF
[Unit]
Description=Run Aztec Agent every 37 seconds
Requires=aztec-agent.service

[Timer]
OnBootSec=37
OnUnitActiveSec=37
AccuracySec=1us

[Install]
WantedBy=timers.target
EOF

  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º timer
  systemctl daemon-reload
  systemctl enable aztec-agent.timer
  systemctl start aztec-agent.timer

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
  if systemctl is-active --quiet aztec-agent.timer; then
    echo -e "\n${GREEN}$(t "agent_systemd_added")${NC}"
    echo -e "${GREEN}$(t "agent_timer_status")$(systemctl status aztec-agent.timer --no-pager -q | grep Active)${NC}"
  else
    echo -e "\n${RED}$(t "agent_timer_error")${NC}"
    systemctl status aztec-agent.timer --no-pager
  fi
}

# === Remove cron task and agent ===
remove_cron_agent() {
  echo -e "\n${BLUE}$(t "removing_agent")${NC}"
  crontab -l 2>/dev/null | grep -v "$AGENT_SCRIPT_PATH/agent.sh" | crontab -
  rm -rf "$AGENT_SCRIPT_PATH"
  echo -e "\n${GREEN}$(t "agent_removed")${NC}"
}

# === Remove cron task and agent ===
remove_systemd_agent() {
  echo -e "\n${BLUE}$(t "removing_systemd_agent")${NC}"
  systemctl stop aztec-agent.timer
  systemctl disable aztec-agent.timer
  rm /etc/systemd/system/aztec-agent.*
  rm -rf "$AGENT_SCRIPT_PATH"
  echo -e "\n${GREEN}$(t "agent_systemd_removed")${NC}"
}


check_proven_block() {
  ENV_FILE="/root/.env-aztec-agent"

  if [ -f "$ENV_FILE" ]; then
    source "$ENV_FILE"
  fi

  AZTEC_PORT=${AZTEC_PORT:-8080}

  echo -e "\n${CYAN}$(t "current_aztec_port") $AZTEC_PORT${NC}"
  read -p "$(t "enter_aztec_port_prompt") [${AZTEC_PORT}]: " user_port

  if [ -n "$user_port" ]; then
    AZTEC_PORT=$user_port

    if grep -q "^AZTEC_PORT=" "$ENV_FILE" 2>/dev/null; then
      sed -i "s/^AZTEC_PORT=.*/AZTEC_PORT=$AZTEC_PORT/" "$ENV_FILE"
    else
      echo "AZTEC_PORT=$AZTEC_PORT" >> "$ENV_FILE"
    fi

    echo -e "${GREEN}$(t "port_saved_successfully")${NC}"
  fi

  echo -e "\n${BLUE}$(t "checking_port") $AZTEC_PORT...${NC}"
  if ! nc -z -w 2 localhost $AZTEC_PORT; then
    echo -e "\n${RED}$(t "port_not_available") $AZTEC_PORT${NC}"
    echo -e "${YELLOW}$(t "check_node_running")${NC}"
    return 1
  fi

  echo -e "\n${BLUE}$(t "get_proven_block")${NC}"

  # –§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –±–ª–æ–∫–∞
  (
    curl -s -X POST -H 'Content-Type: application/json' \
      -d '{"jsonrpc":"2.0","method":"node_getL2Tips","params":[],"id":67}' \
      http://localhost:$AZTEC_PORT | jq -r ".result.proven.number"
  ) > /tmp/proven_block.tmp &
  pid1=$!
  spinner $pid1
  wait $pid1

  PROVEN_BLOCK=$(< /tmp/proven_block.tmp)
  rm -f /tmp/proven_block.tmp

  if [[ -z "$PROVEN_BLOCK" || "$PROVEN_BLOCK" == "null" ]]; then
    echo -e "\n${RED}$(t "proven_block_error")${NC}"
    return 1
  fi

  echo -e "\n${GREEN}$(t "proven_block_found") $PROVEN_BLOCK${NC}"

  echo -e "\n${BLUE}$(t "get_sync_proof")${NC}"

  # –§–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è proof
  (
    curl -s -X POST -H 'Content-Type: application/json' \
      -d "{\"jsonrpc\":\"2.0\",\"method\":\"node_getArchiveSiblingPath\",\"params\":[\"$PROVEN_BLOCK\",\"$PROVEN_BLOCK\"],\"id\":68}" \
      http://localhost:$AZTEC_PORT | jq -r ".result"
  ) > /tmp/sync_proof.tmp &
  pid2=$!
  spinner $pid2
  wait $pid2

  SYNC_PROOF=$(< /tmp/sync_proof.tmp)
  rm -f /tmp/sync_proof.tmp

  if [[ -z "$SYNC_PROOF" || "$SYNC_PROOF" == "null" ]]; then
    echo -e "\n${RED}$(t "sync_proof_error")${NC}"
    return 1
  fi

  echo -e "\n${GREEN}$(t "sync_proof_found")${NC}"
  echo "$SYNC_PROOF"
  return 0
}

# === Change RPC URL ===
change_rpc_url() {
  ENV_FILE=".env-aztec-agent"

  echo -e "\n${BLUE}$(t "rpc_change_prompt")${NC}"
  read -p "> " NEW_RPC_URL

  if [ -z "$NEW_RPC_URL" ]; then
    echo -e "${RED}Error: RPC URL cannot be empty${NC}"
    return 1
  fi

  # –¢–µ—Å—Ç–∏—Ä—É–µ–º RPC URL
  echo -e "\n${BLUE}Testing new RPC URL...${NC}"
  response=$(curl -s -X POST -H "Content-Type: application/json" \
    --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' \
    "$NEW_RPC_URL" 2>/dev/null)

  if [[ -z "$response" || "$response" == *"error"* ]]; then
    echo -e "${RED}Error: Failed to connect to the RPC endpoint. Please check the URL and try again.${NC}"
    return 1
  fi

  # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º RPC_URL –≤ —Ñ–∞–π–ª
  if grep -q "^RPC_URL=" "$ENV_FILE" 2>/dev/null; then
    sed -i "s|^RPC_URL=.*|RPC_URL=$NEW_RPC_URL|" "$ENV_FILE"
  else
    echo "RPC_URL=$NEW_RPC_URL" >> "$ENV_FILE"
  fi

  echo -e "\n${GREEN}$(t "rpc_change_success")${NC}"
  echo -e "${YELLOW}New RPC URL: $NEW_RPC_URL${NC}"

  # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  source "$ENV_FILE"
}

# === Check validator ===
function check_validator {
  URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/check-validator.sh"
  echo -e ""
  echo -e "${CYAN}$(t "running_validator_script")${NC}"
  echo -e ""

  # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
  bash <(curl -s "$URL") "$LANG" || echo -e "${RED}$(t "failed_run_validator")${NC}"
}

# === Install Aztec node ===
function install_aztec {
  URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/install_aztec.sh"
  echo -e ""
  echo -e "${CYAN}$(t "running_install_node")${NC}"
  echo -e ""

  # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞
  TEMP_SCRIPT=$(mktemp)

  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç
  curl -s "$URL" > "$TEMP_SCRIPT" || {
    echo -e "${RED}$(t "failed_downloading_script")${NC}"
    rm -f "$TEMP_SCRIPT"
    return 1
  }

  # –ó–∞–ø—É—Å–∫–∞–µ–º —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π Ctrl+C –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–¥–æ–≤ –≤–æ–∑–≤—Ä–∞—Ç–∞
  bash "$TEMP_SCRIPT" "$LANG"
  EXIT_CODE=$?

  case $EXIT_CODE in
    0)
      # –£—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
      echo -e "${GREEN}$(t "install_completed_successfully")${NC}"
      ;;
    1)
      # –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
      echo -e "${RED}$(t "failed_running_install_node")${NC}"
      ;;
    130)
      # Ctrl+C - –Ω–µ —Å—á–∏—Ç–∞–µ–º –æ—à–∏–±–∫–æ–π
      echo -e "${YELLOW}$(t "logs_stopped_by_user")${NC}"
      ;;
    2)
      # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–∑-–∑–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤
      echo -e "${YELLOW}$(t "installation_cancelled_by_user")${NC}"
      ;;
    *)
      # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞
      echo -e "${RED}$(t "unknown_error_occurred")${NC}"
      ;;
  esac

  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  rm -f "$TEMP_SCRIPT"

  return $EXIT_CODE
}

# === Delete Aztec node ===
function delete_aztec() {
    local URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/install_aztec.sh"
    local FUNCTION_NAME="delete_aztec_node"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    source <(curl -s "$URL" | sed -n "/^$FUNCTION_NAME()/,/^}/p"; echo "$FUNCTION_NAME")
}

# === Update Aztec node ===
function update_aztec() {
    local URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/install_aztec.sh"
    local FUNCTION_NAME="update_aztec_node"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    source <(curl -s "$URL" | sed -n "/^$FUNCTION_NAME()/,/^}/p"; echo "$FUNCTION_NAME")
}

# === Downgrade Aztec node ===
function downgrade_aztec() {
    local URL="https://raw.githubusercontent.com/pittpv/aztec-monitoring-script/main/other/install_aztec.sh"
    local FUNCTION_NAME="downgrade_aztec_node"

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    source <(curl -s "$URL" | sed -n "/^$FUNCTION_NAME()/,/^}/p"; echo "$FUNCTION_NAME")
}


# === Common helper functions ===
function _ensure_env_file() {
  local env_file="$HOME/.env-aztec-agent"
  [[ ! -f "$env_file" ]] && touch "$env_file"
  echo "$env_file"
}

function _update_env_var() {
  local env_file="$1" key="$2" value="$3"
  if grep -q "^$key=" "$env_file"; then
    sed -i "s|^$key=.*|$key=$value|" "$env_file"
  else
    echo "$key=$value" >> "$env_file"
  fi
}

function _read_env_var() {
  local env_file="$1" key="$2"
  grep "^$key=" "$env_file" | cut -d '=' -f2-
}

function _validate_compose_path() {
  local path="$1"
  [[ -d "$path" && -f "$path/docker-compose.yml" ]]
}

# === Stop Aztec containers ===
function stop_aztec_containers() {
  local env_file
  env_file=$(_ensure_env_file)

  local run_type
  run_type=$(_read_env_var "$env_file" "RUN_TYPE")

  case "$run_type" in
    "DOCKER")
      local compose_path
      compose_path=$(_read_env_var "$env_file" "COMPOSE_PATH")

      if ! _validate_compose_path "$compose_path"; then
        read -p "$(t "enter_compose_path")" compose_path
        if _validate_compose_path "$compose_path"; then
          _update_env_var "$env_file" "COMPOSE_PATH" "$compose_path"
        else
          echo -e "${RED}$(t "invalid_path")${NC}"
          return 1
        fi
      fi

      _update_env_var "$env_file" "RUN_TYPE" "DOCKER"

      if cd "$compose_path" && docker compose down; then
        echo -e "${GREEN}$(t "docker_stop_success")${NC}"
      else
        echo -e "${RED}Failed to stop Docker containers${NC}"
        return 1
      fi
      ;;

    "CLI")
      local session_name
      session_name=$(_read_env_var "$env_file" "SCREEN_SESSION")

      if [[ -z "$session_name" ]]; then
        session_name=$(screen -ls | grep aztec | awk '{print $1}')
        # Extract only the alphabetical part (remove numbers and .aztec)
        session_name=$(echo "$session_name" | sed 's/^[0-9]*\.//;s/\.aztec$//')
        if [[ -z "$session_name" ]]; then
          echo -e "${RED}$(t "no_aztec_screen")${NC}"
          return 1
        fi
        _update_env_var "$env_file" "SCREEN_SESSION" "$session_name"
      fi

      _update_env_var "$env_file" "RUN_TYPE" "CLI"

      screen -S "$session_name" -p 0 -X stuff $'\003'
      sleep 2
      screen -S "$session_name" -X quit
      echo -e "${GREEN}$(t "cli_stop_success")${NC}"
      ;;

    *)
      echo -e "\n${YELLOW}$(t "stop_method_prompt")${NC}"
      read -r method

      case "$method" in
        "docker-compose")
          read -p "$(t "enter_compose_path")" compose_path
          if _validate_compose_path "$compose_path"; then
            _update_env_var "$env_file" "COMPOSE_PATH" "$compose_path"
            _update_env_var "$env_file" "RUN_TYPE" "DOCKER"

            cd "$compose_path" || return 1
            docker compose down
            echo -e "${GREEN}$(t "docker_stop_success")${NC}"
          else
            echo -e "${RED}$(t "invalid_path")${NC}"
            return 1
          fi
          ;;

        "cli")
          local session_name
          session_name=$(screen -ls | grep aztec | awk '{print $1}')
          if [[ -n "$session_name" ]]; then
            # Extract only the alphabetical part (remove numbers and .aztec)
            session_name=$(echo "$session_name" | sed 's/^[0-9]*\.//;s/\.aztec$//')
            _update_env_var "$env_file" "SCREEN_SESSION" "$session_name"
            _update_env_var "$env_file" "RUN_TYPE" "CLI"

            screen -S "$session_name" -p 0 -X stuff $'\003'
            sleep 2
            screen -S "$session_name" -X quit
            echo -e "${GREEN}$(t "cli_stop_success")${NC}"
          else
            echo -e "${RED}$(t "no_aztec_screen")${NC}"
            return 1
          fi
          ;;

        *)
          echo -e "${RED}Invalid method. Choose 'docker-compose' or 'cli'.${NC}"
          return 1
          ;;
      esac
      ;;
  esac
}

# === Start Aztec containers ===
function start_aztec_containers() {
  local env_file
  env_file=$(_ensure_env_file)

  echo -e "\n${YELLOW}$(t "starting_node")${NC}"

  local run_type
  run_type=$(_read_env_var "$env_file" "RUN_TYPE")

  if [[ -z "$run_type" ]]; then
    echo -e "${YELLOW}$(t "run_type_not_set")${NC}"
    read -p "$(t "confirm_cli_run") [y/N] " confirm
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
      run_type="CLI"
      _update_env_var "$env_file" "RUN_TYPE" "$run_type"
      echo -e "${GREEN}$(t "run_type_set_to_cli")${NC}"
    else
      echo -e "${RED}$(t "run_aborted")${NC}"
      return 1
    fi
  fi

  case "$run_type" in
    "DOCKER")
      local compose_path
      compose_path=$(_read_env_var "$env_file" "COMPOSE_PATH")

      if ! _validate_compose_path "$compose_path"; then
        echo -e "${RED}$(t "missing_compose")${NC}"
        read -p "$(t "enter_compose_path")" compose_path
        if ! _validate_compose_path "$compose_path"; then
          echo -e "${RED}$(t "invalid_path")${NC}"
          return 1
        fi
        _update_env_var "$env_file" "COMPOSE_PATH" "$compose_path"
      fi

      if cd "$compose_path" && docker compose up -d; then
        echo -e "${GREEN}$(t "node_started")${NC}"
      else
        echo -e "${RED}Failed to start Docker containers${NC}"
        return 1
      fi
      ;;

    "CLI")
      local p2p_ip
      p2p_ip=$(curl -s https://api.ipify.org || echo "127.0.0.1")

      declare -A vars=(
        ["RPC_URL"]="Ethereum Execution RPC URL"
        ["CONSENSUS_BEACON_URL"]="Consensus Beacon URL"
        ["VALIDATOR_PRIVATE_KEY"]="Validator Private Key (without 0x)"
        ["COINBASE"]="Coinbase (your EVM wallet address)"
        ["P2P_IP"]="$p2p_ip"
      )

      for key in "${!vars[@]}"; do
        if ! grep -q "^$key=" "$env_file"; then
          local prompt="${vars[$key]}"
          local val
          if [[ "$key" == "P2P_IP" ]]; then
            val="$p2p_ip"
          else
            read -p "$prompt: " val
          fi
          _update_env_var "$env_file" "$key" "$val"
        fi
      done

      local ethereum_rpc_url consensus_beacon_url validator_private_key coinbase
      ethereum_rpc_url=$(_read_env_var "$env_file" "RPC_URL")
      consensus_beacon_url=$(_read_env_var "$env_file" "CONSENSUS_BEACON_URL")
      validator_private_key=$(_read_env_var "$env_file" "VALIDATOR_PRIVATE_KEY")
      coinbase=$(_read_env_var "$env_file" "COINBASE")
      p2p_ip=$(_read_env_var "$env_file" "P2P_IP")

      local session_name
      session_name=$(_read_env_var "$env_file" "SCREEN_SESSION")
      [[ -z "$session_name" ]] && session_name="aztec"
      _update_env_var "$env_file" "SCREEN_SESSION" "$session_name"

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Å—Å–∏–π —Å aztec
      existing_sessions=$(screen -ls | grep -oP '[0-9]+\.aztec[^\s]*')
      if [[ -n "$existing_sessions" ]]; then
        while read -r session; do
          screen -XS "$session" quit
          echo -e "${YELLOW}$(t "cli_quit_old_sessions") $session${NC}"
        done <<< "$existing_sessions"
      fi

      if screen -dmS "$session_name" && \
         screen -S "$session_name" -p 0 -X stuff "aztec start --node --archiver --sequencer \
--network testnet \
--l1-rpc-urls $ethereum_rpc_url \
--l1-consensus-host-urls $consensus_beacon_url \
--sequencer.validatorPrivateKeys 0x$validator_private_key \
--sequencer.coinbase $coinbase \
--p2p.p2pIp $p2p_ip"$'\n'; then
        echo -e "${GREEN}$(t "node_started")${NC}"
      else
        echo -e "${RED}Failed to start Aztec in screen session${NC}"
        return 1
      fi
      ;;

    *)
      echo -e "${RED}Unknown RUN_TYPE: $run_type${NC}"
      return 1
      ;;
  esac
}

# === Aztec node version check (via direct JS entrypoint) ===
function check_aztec_version() {

    echo -e "\n${CYAN}$(t "checking_aztec_version")${NC}"
    container_id=$(docker ps --format "{{.ID}} {{.Names}}" \
                   | grep aztec | grep -v watchtower | head -n 1 | awk '{print $1}')

    if [ -z "$container_id" ]; then
        echo -e "${RED}$(t "container_not_found")${NC}"
        return
    fi

    echo -e "${GREEN}$(t "container_found") ${BLUE}$container_id${NC}"

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏—é
    version_output=$(docker exec "$container_id" node /usr/src/yarn-project/aztec/dest/bin/index.js --version 2>/dev/null)

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É —Å –≤–µ—Ä—Å–∏–µ–π (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º debug/verbose —Å–æ–æ–±—â–µ–Ω–∏—è)
    version=$(echo "$version_output" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+' | tail -n 1)

    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É –≤–µ—Ä—Å–∏–∏
    if [ -z "$version" ]; then
        version=$(echo "$version_output" | tail -n 1 | grep -E '^[0-9]+\.[0-9]+\.[0-9]+')
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π rc –≤–µ—Ä—Å–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.0.0-rc.27)
    if [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$ ]]; then
        echo -e "${GREEN}$(t "aztec_node_version") ${BLUE}$version${NC}"
    else
        echo -e "\n${RED}$(t "aztec_version_failed")${NC}"
        echo -e "${YELLOW}$(t "raw_output"):${NC}"
        echo "$version_output"
    fi
}

# === Main menu ===
main_menu() {
  show_logo
  while true; do
    echo -e "\n${BLUE}$(t "title")${NC}"
    echo -e "${CYAN}$(t "option1")${NC}"
    echo -e "${GREEN}$(t "option2")${NC}"
    echo -e "${RED}$(t "option3")${NC}"
    echo -e "${CYAN}$(t "option4")${NC}"
    echo -e "${CYAN}$(t "option5")${NC}"
    echo -e "${CYAN}$(t "option6")${NC}"
    echo -e "${CYAN}$(t "option7")${NC}"
    echo -e "${CYAN}$(t "option8")${NC}"
    echo -e "${CYAN}$(t "option9")${NC}"
    echo -e "${CYAN}$(t "option10")${NC}"
    echo -e "${GREEN}$(t "option11")${NC}"
    echo -e "${RED}$(t "option12")${NC}"
    echo -e "${CYAN}$(t "option13")${NC}"
    echo -e "${CYAN}$(t "option14")${NC}"
    echo -e "${CYAN}$(t "option15")${NC}"
    echo -e "${YELLOW}$(t "option16")${NC}"
    echo -e "${CYAN}$(t "option17")${NC}"
    echo -e "${RED}$(t "option0")${NC}"
    echo -e "${BLUE}================================${NC}"

    read -p "$(t "choose_option") " choice

    case "$choice" in
      1) check_aztec_container_logs ;;
      2) create_systemd_agent ;;
      3) remove_systemd_agent ;;
      4) find_rollup_address ;;
      5) find_peer_id ;;
      6) find_governance_proposer_payload ;;
      7) check_proven_block ;;
      8) change_rpc_url ;;
      9) check_validator ;;
      10) view_container_logs ;;
      11) install_aztec ;;
      12) delete_aztec ;;
      13) stop_aztec_containers ;;
      14) start_aztec_containers ;;
      15) update_aztec ;;
      16) downgrade_aztec ;;
      17) check_aztec_version ;;
      0) echo -e "\n${GREEN}$(t "goodbye")${NC}"; exit 0 ;;
      *) echo -e "\n${RED}$(t "invalid_choice")${NC}" ;;
    esac
  done
}

# === Script launch ===
init_languages
check_dependencies
main_menu
